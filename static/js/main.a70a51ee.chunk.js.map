{"version":3,"sources":["common/c1-Input/InputText.module.css","features/f5-Profile/p1-UI/Profile.module.css","features/f1-Sign-in/s1-UI/Sign-in.module.css","features/f2-Registration/r1-UI/SignUp.module.css","features/f3-Forgot/f1-UI/Forgot.module.css","features/f1-Sign-in/s1-UI/FormLogin/FormLogin.module.css","common/c9-Test/Test.module.css","common/c3-Checkbox/Checkbox.module.css","common/c2-Button/Button.module.css","features/f4-Password-assistance/a1-UI/Assistance.module.css","common/c4-Navlink/CustomNavlink.module.css","common/c5-Loader/loader.module.css","common/CommonStyle.module.css","main/m1-UI/Header.module.css","features/f2-Registration/r3-DAL/SignUpApi.ts","common/c1-Input/InputText.tsx","common/c1-Input/InputTextPage.tsx","common/c3-Checkbox/Checkbox.tsx","common/c3-Checkbox/CheckBoxPage.tsx","common/c2-Button/Button.tsx","common/c2-Button/ButtonPage.tsx","common/c9-Test/Test.tsx","features/f1-Sign-in/s3-DAL/SignAPI.ts","features/f1-Sign-in/s2-BLL/Sign-in-reducer.ts","common/c1-Input/InputPassword.tsx","features/f1-Sign-in/s1-UI/FormLogin/FormLogin.tsx","assets/img/preloader.svg","common/c5-Loader/Preloader.tsx","features/f1-Sign-in/s1-UI/Sign-in.tsx","features/f1-Sign-in/s1-UI/SignInContainer.tsx","main/m1-UI/Routes.tsx","features/f2-Registration/r2-BLL/Sign-up-reducer.ts","features/f2-Registration/r1-UI/SignUp.tsx","features/f2-Registration/r1-UI/SignUpContainer.tsx","features/f5-Profile/p3-DAL/Profile-API.ts","features/f5-Profile/p2-BLL/Profile-reducer.ts","features/f5-Profile/p1-UI/Profile.tsx","features/f3-Forgot/f1-UI/Forgot.tsx","features/f3-Forgot/f3-DAL/forgotAPI.ts","features/f3-Forgot/f2-BLL/Forgot-reducer.ts","features/f3-Forgot/f1-UI/ForgotContainer.tsx","features/f4-Password-assistance/a1-UI/Assistance.tsx","features/f4-Password-assistance/a3-DAL/assistanceAPI.ts","features/f4-Password-assistance/a2-BLL/assistance-reducer.ts","features/f4-Password-assistance/a1-UI/AssistanceContainer.tsx","common/c4-Navlink/CustomNavlink.tsx","main/m1-UI/Header.tsx","main/m1-UI/Main.tsx","main/m2-BLL/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","StatusCode","InputText","type","onChange","onChangeText","onKeyPress","onEnter","setError","label","error","className","restProps","finalInputClassName","s","errorInput","input","wrapper","e","currentTarget","value","key","onBlur","required","animationBorder","InputTextPage","useState","text","setText","console","log","Checkbox","onChangeChecked","children","spanClassName","checkbox","checked","CheckboxPage","setChecked","Button","red","finalClassName","default","btn","ButtonPage","onClick","alert","Test","item","instance","axios","create","withCredentials","baseURL","signAPI","user","post","initialState","loading","loaderAC","errorRequestAC","InputPassword","passwordType","setPasswordType","autoComplete","onPassword","FormLogin","React","memo","onChangeEmail","onChangePassword","email","password","onChangeRememberMe","rememberMe","wrapperInputs","checkboxWrapper","Preloader","loader","src","alt","SignIn","requestLogin","finallySignInClass","signInContent","forgot","to","Path","FORGOT_PATH","link","registration","SIGN_UP_PATH","SignInContainer","dispatch","useDispatch","useSelector","state","signIn","setEmail","setPassword","setRememberMe","useCallback","PROFILE_PATH","loginData","then","res","data","catch","errorMessage","response","finally","requestApi","payload","rej","isSign","isFetch","returnServerError","fetchingRegistration","SignUp","serverError","isFetching","resetErrors","formHandler","pass","setPass","newPass","setNewPass","login","setLogin","errorLogin","errorPass","setErrorPass","errorNewPass","setErrorNewPass","useEffect","errorsJSX","map","err","pageWrapper","formStyle","disabled","push","length","SignUpContainer","register","isSignUp","status","success","signUp","fail","serverResponse","registrationNewUser","profileAPI","delete","auth","setLoading","logoutThunk","Profile","profile","classes","avatar","description","ava","name","numbers","cards","list","SIGN_IN_PATH","Forgot","isSuccess","sendInstruction","img","btnForgot","forgotApi","from","message","initialstate","ForgotContainer","restorePassword","Assistance","sendNewPassword","btnSetPassword","assistanceApi","token","resetPasswordToken","requestStatus","setRequestStatus","AssistanceContainer","assistance","useParams","info","setNewPassword","Routes","commonStyle","container","exact","path","render","PASSWORD_ASSISTANCE_PATH","TEST_PATH","CustomNavlink","body","activeClassName","active","a","Header","header","Main","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a70a51ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputText_wrapper__1ThhT\",\"input\":\"InputText_input__F-S4Y\",\"label\":\"InputText_label__2J6Nv\",\"animationBorder\":\"InputText_animationBorder__1hXFZ\",\"errorInput\":\"InputText_errorInput__3rcwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2SuGn\",\"avatar\":\"Profile_avatar__3VfRx\",\"description\":\"Profile_description__1-K2p\",\"ava\":\"Profile_ava__1KNMd\",\"numbers\":\"Profile_numbers__o2JT1\",\"cards\":\"Profile_cards__133B7\",\"input\":\"Profile_input__sL7n7\",\"list\":\"Profile_list__1_AeP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sign-in_wrapper__3xaRN\",\"signInContent\":\"Sign-in_signInContent__3tw_5\",\"forgot\":\"Sign-in_forgot__SerP2\",\"link\":\"Sign-in_link__1fUBq\",\"registration\":\"Sign-in_registration__1kYCi\",\"error\":\"Sign-in_error__1gPOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"SignUp_pageWrapper__3WbGJ\",\"formStyle\":\"SignUp_formStyle__3TRxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Forgot_wrapper__2FcvV\",\"errorMessage\":\"Forgot_errorMessage__3pCIH\",\"img\":\"Forgot_img__2t-5p\",\"btnForgot\":\"Forgot_btnForgot__3QN54\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInputs\":\"FormLogin_wrapperInputs__OIxPa\",\"checkboxWrapper\":\"FormLogin_checkboxWrapper__1HY2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Test_item__vziBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Checkbox_wrapper__3Txnz\",\"checkbox\":\"Checkbox_checkbox__2burK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__XwERE\",\"default\":\"Button_default__3KFLL\",\"red\":\"Button_red__11RH8\",\"button\":\"Button_button__3GXau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"Assistance_errorMessage__1nmMI\",\"wrapper\":\"Assistance_wrapper__15wpL\",\"btnSetPassword\":\"Assistance_btnSetPassword__3SiM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"a\":\"CustomNavlink_a__2JusA\",\"active\":\"CustomNavlink_active__1gBBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__3podu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CommonStyle_container__2_69T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1JiwK\"};","import axios from \"axios\";\r\n\r\nconst settings = {\r\n    withCredentials: true,\r\n};\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    ...settings\r\n});\r\n\r\n\r\nexport type ResponseType<D = {}> = {\r\n    status: StatusCode\r\n    statusText: string\r\n    Data: D\r\n}\r\n\r\nexport enum StatusCode {\r\n    success = 201,\r\n    fail = 400\r\n}\r\n\r\nexport type AddedUserType = {\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n}\r\n\r\nexport type ErrorType = {\r\n    error: string,\r\n    email: string,\r\n    in: string,\r\n}\r\n\r\n\r\nexport const requestApi = {\r\n    register(payload: { email: string, password: string }) {\r\n        return instance.post<ResponseType<AddedUserType | ErrorType>>(`auth/register`, payload).then(res => res\r\n        ).catch(rej => rej.response);\r\n    },\r\n};\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './InputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    setError?: (error: string) => void\r\n    error?: string\r\n    label?: string\r\n    spanClassName?: string\r\n}\r\n\r\nexport const InputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter, setError,\r\n        label, error,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        onChange && onChange(e) // если есть пропс onChange то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter() // если есть пропс onEnter и если нажата кнопка Enter, то вызвать его\r\n    }\r\n    const onBlurcallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        if (!e.currentTarget.value) {\r\n            setError && setError('field is required')\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${s.input} ${className}`\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                onBlur={onBlurcallback}\r\n                className={finalInputClassName}\r\n                required // меняет поведение label!!!\r\n\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n\r\n            />\r\n            <span className={s.animationBorder}> </span>\r\n            <label className={s.label}>{label}</label>\r\n        </div>\r\n    )\r\n} // TODO: required?","import React, {useState} from 'react'\r\nimport { InputText } from './InputText'\r\n\r\nexport const InputTextPage = () => {\r\n\r\n    const [text, setText] = useState<string>('')\r\n    const [error, setError] = useState('')\r\n\r\n    const showAlert = () => {\r\n        console.log(text)\r\n    }\r\n\r\n    return (\r\n            <InputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                setError={setError}\r\n                label={\"E-mail\"}\r\n                error={error}\r\n            />\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Checkbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps в том числе checked\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.wrapper}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <p className={s.spanClassName}>{children}</p>}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Checkbox","import { useState } from 'react'\r\nimport Checkbox from './Checkbox'\r\n\r\nexport const CheckboxPage = () => {\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    return (\r\n        <Checkbox\r\n            checked={checked}\r\n            onChangeChecked={setChecked}\r\n        >\r\n            children {/*// этот текст попадёт в children*/}\r\n        </Checkbox>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.btn} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Button from './Button'\r\n\r\nexport const ButtonPage = () => {\r\n\r\n    const showAlert = () => {\r\n        alert('button was clicked')\r\n    }\r\n\r\n    return (\r\n\r\n        <Button\r\n            // red // пропсу с булевым значением не обязательно указывать true\r\n            onClick={showAlert}\r\n        >\r\n            delete {/*// название кнопки попадёт в children*/}\r\n        </Button>\r\n\r\n    )\r\n}","import { InputTextPage } from '../c1-Input/InputTextPage'\r\nimport s from './Test.module.css'\r\nimport { CheckboxPage } from '../c3-Checkbox/CheckBoxPage'\r\nimport { ButtonPage } from '../c2-Button/ButtonPage'\r\n\r\nexport const Test = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={s.item}><span>Component Input - </span><InputTextPage /></div>\r\n            <div className={s.item}><span>Component Button - </span><ButtonPage /></div>\r\n            <div className={s.item}><span>Component Checkbox - </span><CheckboxPage /></div>\r\n        </>\r\n    )\r\n}","import axios from \"axios\"\r\nimport {UserType} from \"../s2-BLL/Sign-in-reducer\";\r\n\r\ntype LoginUser = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n})\r\n\r\n\r\nexport const signAPI = {\r\n    authRequest(user: LoginUser) {\r\n        return instance.post<UserType>(\"auth/login\", user)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {signAPI} from \"../s3-DAL/SignAPI\";\r\n\r\nconst initialState = {\r\n    user: null as null | UserType,\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nexport const signInReducer = (state: SignInStateType = initialState, action: ActionsType): SignInStateType => {\r\n    switch (action.type) {\r\n        case \"SIGN-IN/AUTH-USER\":\r\n            return {...state, user: action.user}\r\n        case \"SIGN-IN/LOADER\":\r\n            return {...state, loading: action.loading}\r\n        case \"SIGN-IN/ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nconst authUserAC = (user: UserType) => ({type: \"SIGN-IN/AUTH-USER\", user} as const)\r\nconst loaderAC = (loading: boolean) => ({type: \"SIGN-IN/LOADER\", loading} as const)\r\nexport const errorRequestAC = (error: string) => ({type: \"SIGN-IN/ERROR\", error} as const)\r\n\r\n// thunks\r\nexport const userAuthRequestTC = (loginData: LoginData) => (dispatch: Dispatch) => {\r\n    dispatch(loaderAC(true))\r\n    signAPI.authRequest(loginData)\r\n        .then(res => dispatch(authUserAC(res.data)))\r\n        .catch(e => {\r\n            const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n            dispatch(errorRequestAC(errorMessage))\r\n        })\r\n        .finally(() => dispatch(loaderAC(false)))\r\n}\r\n// types\r\n\r\ntype SignInStateType = typeof initialState\r\n\r\nexport type UserType = {\r\n    avatar: string,\r\n    created: string,\r\n    email: string,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    publicCardPacksCount: number,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    tokenDeathTime: number,\r\n    updated: string,\r\n    verified: boolean,\r\n    __v: number,\r\n    _id: string,\r\n    deviceTokens: any\r\n}\r\n\r\ntype LoginData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof authUserAC>\r\n    | ReturnType<typeof loaderAC>\r\n    | ReturnType<typeof errorRequestAC>","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react'\r\nimport s from './InputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    setError?: (error: string) => void\r\n    error?: string\r\n    label?: string\r\n    spanClassName?: string\r\n}\r\n\r\nexport const InputPassword: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter, setError,\r\n        label, error,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // если есть пропс onChange то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter() // если есть пропс onEnter и если нажата кнопка Enter, то вызвать его\r\n    }\r\n    const onBlurcallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        if (!e.currentTarget.value) {\r\n            setError && setError('field is required')\r\n        }\r\n    }\r\n\r\n    const [passwordType, setPasswordType] = useState(\"password\")\r\n\r\n    const openPasswordHandler = () => {\r\n        passwordType === \"text\" ? setPasswordType(\"password\") : setPasswordType(\"text\")\r\n    }\r\n\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${s.input} ${className}`\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                onBlur={onBlurcallback}\r\n                className={finalInputClassName}\r\n                autoComplete={\"off\"}\r\n                required // меняет поведение label!!!\r\n                type={passwordType}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <span className={s.onPassword} onClick={openPasswordHandler}> </span>\r\n\r\n            <span className={s.animationBorder}> </span>\r\n            <label className={s.label}>{label}</label>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./FormLogin.module.css\";\r\nimport {InputText} from \"../../../../common/c1-Input/InputText\";\r\nimport {InputPassword} from \"../../../../common/c1-Input/InputPassword\";\r\nimport Checkbox from \"../../../../common/c3-Checkbox/Checkbox\";\r\n\r\ntype FormLoginType = {\r\n    onChangeEmail: (email: string) => void\r\n    onChangePassword: (password: string) => void\r\n    onChangeRememberMe: (rememberMe: boolean) => void\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error: string\r\n}\r\n\r\nexport const FormLogin: React.FC<FormLoginType> = React.memo((\r\n    {onChangeEmail, onChangePassword, email, password, onChangeRememberMe, rememberMe, error}\r\n) => {\r\n\r\n\r\n    return (\r\n        <div className={s.wrapperInputs}>\r\n            <InputText\r\n                value={email}\r\n                onChangeText={onChangeEmail}\r\n                setError={() => true}\r\n                error={error}\r\n                label={\"Email\"}\r\n                className={s.input}\r\n            />\r\n            <InputPassword\r\n                value={password}\r\n                onChangeText={onChangePassword}\r\n                setError={() => true}\r\n                error={error}\r\n                label={\"Password\"}\r\n                className={s.input}\r\n            />\r\n            <div className={s.checkboxWrapper}>\r\n                <Checkbox onChangeChecked={onChangeRememberMe} checked={rememberMe}>Remember me </Checkbox>\r\n            </div>\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/preloader.2f856a33.svg\";","import React from \"react\";\r\nimport loader from \"../../assets/img/preloader.svg\"\r\nimport s from \"./loader.module.css\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={s.loader}>\r\n            <img src={loader} alt=\"\"/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Sign-in.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {FormLogin} from \"./FormLogin/FormLogin\";\r\nimport {Preloader} from \"../../../common/c5-Loader/Preloader\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\n\r\ntype PropsType = {\r\n    loading: boolean\r\n    error: string\r\n    email: string\r\n    onChangeEmail: (email: string) => void\r\n    onChangePassword: (password: string) => void\r\n    onChangeRememberMe: (rememberMe: boolean) => void\r\n    password: string\r\n    rememberMe: boolean\r\n    requestLogin: () => void\r\n}\r\n\r\nexport const SignIn: React.FC<PropsType> = ({\r\n    loading,\r\n    error,\r\n    email,\r\n    requestLogin,\r\n    onChangeEmail,\r\n    onChangePassword,\r\n    onChangeRememberMe,\r\n    password,\r\n    rememberMe,\r\n}) => {\r\n\r\n    const finallySignInClass = `${loading ? s.signInContent : \"\"}`\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {loading && <Preloader/>}\r\n            <div className={finallySignInClass}>\r\n                <h1>It-incubator</h1>\r\n                <h2>Sign in</h2>\r\n                <FormLogin onChangeEmail={onChangeEmail}\r\n                           onChangePassword={onChangePassword}\r\n                           onChangeRememberMe={onChangeRememberMe}\r\n                           email={email}\r\n                           password={password}\r\n                           rememberMe={rememberMe}\r\n                           error={error}\r\n                />\r\n                <div className={s.forgot}>\r\n                    <NavLink to={Path.FORGOT_PATH} className={s.link}>Forgot Password?</NavLink>\r\n                </div>\r\n                <div className={s.error}>{error}</div>\r\n                <Button onClick={requestLogin}>Login</Button>\r\n                <div className={s.registration}>\r\n                    <p>Don't have an account? </p>\r\n                    <NavLink to={Path.SIGN_UP_PATH} className={s.link}>Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {errorRequestAC, userAuthRequestTC, UserType} from \"../s2-BLL/Sign-in-reducer\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\nimport {SignIn} from \"./Sign-in\";\r\n\r\n\r\nexport const SignInContainer: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector<AppStoreType, UserType | null>(state => state.signIn.user)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.signIn.loading)\r\n    const error = useSelector<AppStoreType, string>(state => state.signIn.error)\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = useCallback((email: string) => {\r\n        error && dispatch(errorRequestAC(''))\r\n        setEmail(email)\r\n    }, [error, dispatch])\r\n\r\n    const onChangePassword = useCallback((password: string) => {\r\n        error && dispatch(errorRequestAC(''))\r\n        setPassword(password)\r\n    }, [error, dispatch])\r\n\r\n    const onChangeRememberMe = useCallback((checked: boolean) => {\r\n        error && dispatch(errorRequestAC(''))\r\n        setRememberMe(checked)\r\n    }, [error, dispatch])\r\n\r\n    const requestLogin = () => {\r\n        dispatch(userAuthRequestTC({email, password, rememberMe}))\r\n    }\r\n\r\n    if (user) {\r\n        return <Redirect to={Path.PROFILE_PATH}/>\r\n    }\r\n\r\n    return (\r\n        <SignIn\r\n            loading={loading}\r\n            error={error}\r\n            email={email}\r\n            onChangeEmail={onChangeEmail}\r\n            onChangePassword={onChangePassword}\r\n            onChangeRememberMe={onChangeRememberMe}\r\n            password={password}\r\n            rememberMe={rememberMe}\r\n            requestLogin={requestLogin}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { Test } from '../../common/c9-Test/Test'\r\nimport { SignInContainer } from '../../features/f1-Sign-in/s1-UI/SignInContainer'\r\nimport { SignUpContainer } from '../../features/f2-Registration/r1-UI/SignUpContainer'\r\nimport { Profile } from '../../features/f5-Profile/p1-UI/Profile'\r\nimport commonStyle from '../../common/CommonStyle.module.css'\r\nimport { ForgotContainer } from '../../features/f3-Forgot/f1-UI/ForgotContainer'\r\nimport { AssistanceContainer } from '../../features/f4-Password-assistance/a1-UI/AssistanceContainer'\r\n\r\n\r\n// paths\r\nexport enum Path {\r\n    SIGN_IN_PATH = '/sign-in',\r\n    SIGN_UP_PATH = '/sign-up',\r\n    FORGOT_PATH = '/forgot',\r\n    PASSWORD_ASSISTANCE_PATH = '/assistance/:token',\r\n    PROFILE_PATH = '/profile',\r\n    TEST_PATH = '/test',\r\n} \r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <div className={commonStyle.container}>\r\n            <Route exact path={'/'} render={() => <Redirect to={Path.SIGN_IN_PATH}/>}/>\r\n\r\n            <Route path={ Path.SIGN_IN_PATH } render={() => <SignInContainer/>}/>\r\n            <Route path={ Path.SIGN_UP_PATH } render={() => <SignUpContainer/>}/>\r\n            <Route path={ Path.FORGOT_PATH } render={() => <ForgotContainer/>}/>\r\n            <Route path={ Path.PASSWORD_ASSISTANCE_PATH } render={() => <AssistanceContainer/>}/>\r\n            <Route path={ Path.PROFILE_PATH } render={() => <Profile/>}/>\r\n            <Route path={ Path.TEST_PATH } render={() => <Test/>}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n\r\n// types\r\nexport type PathsType = typeof Path","import {AxiosResponse} from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AddedUserType, ErrorType, requestApi, StatusCode} from \"../r3-DAL/SignUpApi\";\r\n\r\nconst initialState = {\r\n    error: [] as Array<string>,\r\n    isSign: false,\r\n    isFetch: false\r\n};\r\n\r\nexport const signUpReducer = (state: SignUpStateType = initialState, action: ActionTypes): SignUpStateType => {\r\n    switch (action.type) {\r\n        case \"SIGN-UP/FETCHING\": {\r\n            return {...state, isFetch: action.isFetch};\r\n        }\r\n        case \"SIGN-UP/SET_SIGN_UP\": {\r\n            return {...state, isSign: action.signUp};\r\n        }\r\n        case \"SIGN-UP/SERVER_ERROR\": {\r\n            return {...state, error: action.error};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n// action\r\nexport const returnServerError = (error: Array<string>) => ({type: \"SIGN-UP/SERVER_ERROR\", error} as const);\r\nexport const isSignUp = (signUp: boolean) => ({type: \"SIGN-UP/SET_SIGN_UP\", signUp} as const);\r\nexport const fetchingRegistration = (isFetch: boolean) => ({type: \"SIGN-UP/FETCHING\", isFetch} as const);\r\n\r\n// thunk\r\nexport const registrationNewUser = (login: string, pass: string) => (dispatch: Dispatch<ActionTypes>) => {\r\n    dispatch(fetchingRegistration(true));\r\n    requestApi.register({email: login, password: pass})\r\n        .then((response: AxiosResponse<AddedUserType & ErrorType>) => {\r\n            switch (response.status) {\r\n                case StatusCode.success: {\r\n                    //Take User if needs\r\n                    // const user: AddedUserType = response.data;\r\n                    alert(\"Вы успешно зарегистрировались  :)\");\r\n                    dispatch(isSignUp(true));\r\n                    break;\r\n                }\r\n                case StatusCode.fail: {\r\n                    const serverResponse: ErrorType = response.data;\r\n                    dispatch(returnServerError([serverResponse.error]));\r\n                    break;\r\n                }\r\n                default: {\r\n                    dispatch(returnServerError(['Some error']));\r\n                    break;\r\n                }\r\n            }\r\n        })\r\n        .catch((rej) => {\r\n            dispatch(returnServerError(['Some error on Server. We work with it.']));\r\n        }).finally(() => {\r\n            dispatch(fetchingRegistration(false));\r\n        }\r\n    );\r\n};\r\n\r\n// types\r\ntype SignUpStateType = typeof initialState\r\n\r\ntype ActionTypes = ReturnType<typeof returnServerError>\r\n    | ReturnType<typeof isSignUp>\r\n    | ReturnType<typeof fetchingRegistration>\r\n","import s from './SignUp.module.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {InputText} from \"../../../common/c1-Input/InputText\";\r\nimport {InputPassword} from \"../../../common/c1-Input/InputPassword\";\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {Preloader} from \"../../../common/c5-Loader/Preloader\";\r\n\r\ntype PropsType = {\r\n    serverError: Array<string>\r\n    isFetching: boolean\r\n    resetErrors: () => void\r\n    formHandler: (error: Array<string>, login: string, pass: string) => void\r\n}\r\n\r\nexport const SignUp: React.FC<PropsType> = ({\r\n    serverError,\r\n    isFetching,\r\n    resetErrors,\r\n    formHandler,\r\n}) => {\r\n\r\n    //Use state for fields\r\n    const [pass, setPass] = useState<string>('');\r\n    const [newPass, setNewPass] = useState<string>('');\r\n    const [login, setLogin] = useState<string>('');\r\n\r\n    //Define error on the form\r\n    let error: Array<string>;\r\n    const errorLogin = login ? '' : 'add your email';\r\n    const [errorPass, setErrorPass] = useState<string>('');\r\n    const [errorNewPass, setErrorNewPass] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        pass === '' ? setErrorPass('field is required') : setErrorPass('');\r\n        newPass === '' ? setErrorNewPass('field is required') : setErrorNewPass('');\r\n    }, [pass, newPass]);\r\n\r\n    const validateform = () => {\r\n        error = [];\r\n        //Check fields before query\r\n        login === '' && error.push(\"Error your login field empty\\n\");\r\n        (pass || newPass) === '' && error.push(\"Password field empty\\n\");\r\n        pass.length < 8 && error.push(\"Password should be more  7 symbols\\n\");\r\n        pass !== newPass && error.push(\"Passwords don't match!\\n\");\r\n        formHandler(error, login, pass)\r\n    };\r\n\r\n\r\n    const errorsJSX = serverError.map(err => {\r\n        return (\r\n            <li key={err}>\r\n                {err}\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={s.pageWrapper}>\r\n            {isFetching && <Preloader/>}\r\n            <h1>it-incubator</h1>\r\n            <h2>SignUp</h2>\r\n            <form>\r\n                <div className={s.formStyle}>\r\n\r\n                    <InputText\r\n                        value={login}\r\n                        onChangeText={setLogin}\r\n                        error={errorLogin}\r\n                        label={\"E-mail\"}\r\n                        onClick={resetErrors}\r\n                        disabled={isFetching}/>\r\n                </div>\r\n                <div className={s.formStyle}>\r\n                    <InputPassword value={pass}\r\n                                   onChangeText={setPass}\r\n                                   error={errorPass}\r\n                                   onClick={resetErrors}\r\n                                   disabled={isFetching}\r\n                                   label={\"Yor password\"}/>\r\n                </div>\r\n                <div className={s.formStyle}>\r\n                    <InputPassword value={newPass}\r\n                                   onChangeText={setNewPass}\r\n                                   error={errorNewPass}\r\n                                   onClick={resetErrors}\r\n                                   disabled={isFetching}\r\n                                   label={\"Repeat Password\"}/>\r\n                </div>\r\n                <div className={s.formStyle}>\r\n                    <ul>\r\n                        {errorsJSX}\r\n                    </ul>\r\n                </div>\r\n                <Button onClick={validateform} disabled={isFetching}>\r\n                    SignUp\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {registrationNewUser, returnServerError} from '../r2-BLL/Sign-up-reducer';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SignUp} from \"./SignUp\";\r\n\r\nexport const SignUpContainer: React.FC = () => {\r\n\r\n    const serverError = useSelector<AppStoreType, Array<string>>(state => state.register.error);\r\n    const isSignUp = useSelector<AppStoreType, boolean>(state => state.register.isSign);\r\n    const isFetching = useSelector<AppStoreType, boolean>(state => state.register.isFetch);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const resetErrors = () => {\r\n        dispatch(returnServerError([]));\r\n    };\r\n\r\n    const formHandler = (error: Array<string>, login: string, pass: string) => {\r\n        if (!error.length) {\r\n            dispatch(registrationNewUser(login, pass)); //ThunkHere\r\n        } else {\r\n            dispatch(returnServerError(error)); //show error\r\n        }\r\n    };\r\n\r\n\r\n    if (isSignUp) {\r\n        return <Redirect to={\"/sign-in\"}/>;\r\n    } //Redirect if success registration\r\n\r\n    return (\r\n        <SignUp\r\n            serverError={serverError}\r\n            isFetching={isFetching}\r\n            resetErrors={resetErrors}\r\n            formHandler={formHandler}/>\r\n    );\r\n};\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n})\r\n\r\nexport const profileAPI = {\r\n    logout () {\r\n        return instance.delete('auth/me')\r\n    },\r\n    setUserData () {\r\n        return instance.post('auth/me',{})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../p3-DAL/Profile-API\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    auth: true\r\n}\r\n\r\nexport const profileReducer = (state: ProfileState = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"PROFILE/ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"PROFILE/LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"PROFILE/AUTH\":\r\n            return {...state, auth: action.auth}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nconst setLoading = (loading: boolean) => {\r\n    return {type: 'PROFILE/LOADING', loading} as const\r\n}\r\n\r\nconst setError = (error: string | null) => {\r\n    return {type: 'PROFILE/ERROR', error} as const\r\n}\r\n\r\nconst setAuth = (auth: boolean) => {\r\n    return {type: 'PROFILE/AUTH', auth} as const\r\n}\r\n\r\n\r\n// thunks\r\n\r\nexport const logoutThunk = (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true))\r\n    profileAPI.logout()\r\n        .then(() => {\r\n            dispatch(setAuth(false))\r\n        })\r\n        .catch(error => {\r\n            dispatch(setError(error.response.data.error))\r\n            console.log(error.response.data.error)\r\n        })\r\n        .finally(() => dispatch(setLoading(false)))\r\n}\r\n\r\n// types\r\n\r\nexport type ProfileState = {\r\n    loading: boolean\r\n    error: null | string\r\n    auth: boolean\r\n}\r\n\r\ntype SetLoading = ReturnType<typeof setLoading>\r\ntype SetError = ReturnType<typeof setError>\r\ntype SetAuth = ReturnType<typeof setAuth>\r\ntype ActionType = SetError | SetLoading | SetAuth","import React from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {UserType} from \"../../f1-Sign-in/s2-BLL/Sign-in-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\nimport {InputText} from \"../../../common/c1-Input/InputText\";\r\nimport {logoutThunk, ProfileState} from \"../p2-BLL/Profile-reducer\";\r\nimport {Preloader} from \"../../../common/c5-Loader/Preloader\";\r\n\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    const user = useSelector<AppStoreType, UserType | null>(state => state.signIn.user)\r\n    const profile = useSelector<AppStoreType, ProfileState >(state => state.profile)\r\n    const dispatch = useDispatch()\r\n\r\n    if (profile.loading) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    }\r\n\r\n    if (!user) {\r\n        return (\r\n            <Redirect to={Path.SIGN_IN_PATH}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.avatar}>\r\n                    <div className={classes.description}>\r\n                        <div className={classes.ava}>\r\n                            <img alt={\"avatar\"}/>\r\n                        </div>\r\n                        {\r\n                            user.name\r\n                                ? <span>{user.name}</span>\r\n                                : <span>USER-NAME</span>\r\n                        }\r\n\r\n                        <span>Front-end developer</span>\r\n                        <Button onClick={() => dispatch(logoutThunk)}>LOG OUT</Button>\r\n                    </div>\r\n                    <div className={classes.numbers}>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={classes.cards}>\r\n                    <div className={classes.input}>\r\n                        <h2>Packs list</h2>\r\n                        <InputText\r\n                            label={\"Search...\"}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.list}>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import s from './Forgot.module.css'\r\nimport { InputText } from '../../../common/c1-Input/InputText'\r\nimport Button from '../../../common/c2-Button/Button'\r\n\r\n\r\ntype PropsType = {\r\n    isSuccess: boolean\r\n    value: string\r\n    onChangeText: (value: string) => void\r\n    setError: (error: string) => void\r\n    error: string\r\n    sendInstruction: () => void\r\n}\r\n\r\nexport const Forgot: React.FC<PropsType> = ({\r\n    isSuccess,\r\n    value,\r\n    onChangeText,\r\n    setError,\r\n    error,\r\n    sendInstruction,\r\n}) => {\r\n\r\n    return (\r\n        isSuccess\r\n            ? <div className={s.wrapper}>\r\n                <h1>it-incubator</h1>\r\n                <h2>Check Email</h2>\r\n                <div className={s.img}>\r\n                    <img alt={\"check email\"} src={\"https://ehs.utoronto.ca/wp-content/uploads/2017/11/email-us.png\"}/>\r\n                </div>\r\n                <p>We’ve sent an Email with instructions to {value}</p>\r\n            </div>\r\n\r\n            : <div className={s.wrapper}>\r\n                <h1>it-incubator</h1>\r\n                <h2>Forgot your password?</h2>\r\n                <InputText\r\n                    value={value}\r\n                    onChangeText={onChangeText}\r\n                    setError={setError}\r\n                    error={error}\r\n                    label={\"E-mail\"}/>\r\n                <span className={s.errorMessage}> {error} </span>   \r\n                <p>Enter your email address and we will send you further instructions </p>\r\n                <Button\r\n                    onClick={sendInstruction}\r\n                    className={s.btnForgot}\r\n                >Send Instructions</Button>\r\n            </div>\r\n\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n})\r\n\r\nexport const forgotApi = {\r\n    sendForgotPassword(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"korsakov.ua.dn@gmail.com\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> password recovery link: \r\n                      <a href='https://korsakov-ua-dn.github.io/Friday#/assistance/$token$'>link</a></div>`\r\n        })\r\n    },\r\n    getPing() {\r\n        return instance.get(\"/ping\")\r\n\r\n    }\r\n}","import { Dispatch } from 'redux'\r\nimport { forgotApi } from '../f3-DAL/forgotAPI'\r\n\r\nconst initialstate = {\r\n    isSuccess: false, // меняет отображение компоненты Forgot на Check Email\r\n    loading: false, // отрисовуется в ForgotContainer\r\n    errorMessage: '' // отрисовуется в Forgot\r\n}\r\n\r\nexport const forgotReducer = (state: ForgotStateType = initialstate, action: ForgotActionType): ForgotStateType => {\r\n    switch (action.type) {\r\n        case \"FORGOT/SET_SUCCESS\": return {...state, isSuccess: action.success}\r\n        case \"FORGOT/SET_LOADING\": return {...state, loading: action.loading}\r\n        case \"FORGOT/SET_ERROR\": return {...state, errorMessage: action.errorMessage}\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nconst setSuccess = (success: boolean) => ({type: \"FORGOT/SET_SUCCESS\", success} as const)\r\nconst setLoading = (loading: boolean) => ({type: \"FORGOT/SET_LOADING\", loading} as const)\r\nconst setError = (errorMessage: string) => ({type: \"FORGOT/SET_ERROR\", errorMessage} as const)\r\n\r\n\r\n// thunks\r\nexport const restorePassword = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true))\r\n    forgotApi.sendForgotPassword(email)\r\n    .then(res => {\r\n        dispatch(setSuccess(true))\r\n    })\r\n    .catch(e => {\r\n        const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n        dispatch(setError(errorMessage))\r\n    })\r\n    .finally( () => dispatch(setLoading(false)) )\r\n}\r\n\r\n// types\r\nexport type ForgotStateType = typeof initialstate\r\n\r\nexport type ForgotActionType = ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setError>","import {useEffect, useState} from 'react'\r\nimport {Forgot} from './Forgot'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStoreType} from '../../../main/m2-BLL/store'\r\nimport {ForgotStateType, restorePassword} from '../f2-BLL/Forgot-reducer'\r\n\r\nexport const ForgotContainer: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const forgot = useSelector<AppStoreType , ForgotStateType>(state => state.forgot)\r\n\r\n    useEffect(() => { setError(forgot.errorMessage)}, [forgot.errorMessage])\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [error, setError] = useState(forgot.errorMessage)\r\n\r\n    const sendInstruction = () => {\r\n        dispatch(restorePassword(email))\r\n    }\r\n\r\n    return (\r\n        forgot.loading\r\n\r\n        ? <h1>Loading...</h1>\r\n\r\n        : <Forgot\r\n            isSuccess={forgot.isSuccess}\r\n            value={email}\r\n            onChangeText = {setEmail}\r\n            setError={setError}\r\n            error = {error}\r\n            sendInstruction={sendInstruction} />\r\n    )\r\n}","import s from './Assistance.module.css'\r\nimport {InputText} from '../../../common/c1-Input/InputText'\r\nimport Button from '../../../common/c2-Button/Button'\r\nimport React from 'react'\r\n\r\ntype PropsType = {\r\n    value: string\r\n    onChangeText: (value: string) => void\r\n    sendNewPassword: () => void\r\n    error: string\r\n}\r\n\r\nexport const Assistance: React.FC<PropsType> = ({\r\n    value,\r\n    onChangeText,\r\n    sendNewPassword,\r\n    error,\r\n}) => {\r\n\r\n    return (\r\n        error \r\n\r\n        ? <span className={s.errorMessage}>{ error }</span>\r\n\r\n        : <div className={s.wrapper}>\r\n            <h1>it-incubator</h1>\r\n            <h2>Create new password</h2>\r\n            <InputText\r\n                value={value}\r\n                onChangeText={onChangeText}\r\n                label={\"Password\"}/>\r\n            <p>Create new password and we will send you further instructions to email</p>\r\n            <Button\r\n                onClick={sendNewPassword}\r\n                className={s.btnSetPassword}\r\n            >Create new password</Button>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n})\r\n\r\nexport const assistanceApi = {\r\n    sendNewPassword(password: string, token: string) {\r\n        return instance.post(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken: token\r\n        })\r\n    },\r\n}","import { Dispatch } from 'redux'\r\nimport { assistanceApi } from '../a3-DAL/assistanceAPI'\r\n\r\nconst initialstate = {\r\n    requestStatus: false, // Redirect to Sign-in at AssistanceContainer\r\n    loading: false, // отрисовуется в AssistanceContainer\r\n    errorMessage: '', // прокидывается в Assistance\r\n}\r\n\r\nexport const assistanceReducer =\r\n    (state: AssistanceStateType = initialstate, action: AssistanceActionType): AssistanceStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ASSISTANCE/SET_REQUEST_STATUS\": return {...state, requestStatus: action.status}\r\n        case \"ASSISTANCE/SET_ERROR_MESSAGE\": return {...state, errorMessage: action.message}\r\n        case \"ASSISTANCE/SET_LOADING\": return {...state, loading: action.loading}\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nconst setRequestStatus = (status: boolean) => ({type: \"ASSISTANCE/SET_REQUEST_STATUS\", status} as const)\r\nconst setErrorMessage = (message: string) => ({type: \"ASSISTANCE/SET_ERROR_MESSAGE\", message} as const)\r\nconst setLoading = (loading: boolean) => ({type: \"ASSISTANCE/SET_LOADING\", loading} as const)\r\n\r\n// thunks\r\nexport const setNewPassword = (password: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true))\r\n    assistanceApi.sendNewPassword(password, token)\r\n    .then(res => {\r\n        console.log(res.data.info)\r\n        dispatch(setRequestStatus(true))\r\n    })\r\n    .then(res => dispatch(setRequestStatus(false)))\r\n    .catch(e => {\r\n        const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n        dispatch(setErrorMessage(errorMessage))\r\n    })\r\n    .finally(() => {\r\n        dispatch(setLoading(false))\r\n    })\r\n}\r\n\r\n// types\r\nexport type AssistanceStateType = typeof initialstate\r\n\r\nexport type AssistanceActionType = ReturnType<typeof setRequestStatus>\r\n    | ReturnType<typeof setErrorMessage>\r\n    | ReturnType<typeof setLoading>","import { Assistance } from './Assistance'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport { AssistanceStateType, setNewPassword } from '../a2-BLL/assistance-reducer'\r\nimport { AppStoreType } from '../../../main/m2-BLL/store'\r\nimport { Path } from '../../../main/m1-UI/Routes'\r\n\r\nexport const AssistanceContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const assistance = useSelector<AppStoreType, AssistanceStateType>(state => state.assistance)\r\n    const [password, setPassword] = useState('')\r\n\r\n    const { token } = useParams<{token: string}>()\r\n\r\n\r\n    const sendPassword = () => {\r\n        dispatch(setNewPassword(password, token))\r\n    }\r\n\r\n    if(assistance.requestStatus) return <Redirect to={Path.SIGN_IN_PATH}/>\r\n\r\n    return (\r\n        assistance.loading \r\n\r\n        ? <h1> Loading... </h1>\r\n\r\n        : <Assistance\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            sendNewPassword={sendPassword}\r\n            error={assistance.errorMessage} />\r\n    )\r\n}","import { NavLink } from 'react-router-dom'\r\nimport s from './CustomNavlink.module.css'\r\n\r\ntype PropsType = {\r\n    to: string\r\n    body: string\r\n}\r\n\r\nexport const CustomNavlink: React.FC<PropsType> = ({\r\n    to, body\r\n}) => {\r\n    return (\r\n        <>\r\n            <NavLink \r\n                activeClassName={s.active}\r\n                to={to}\r\n                className={s.a} >\r\n            {body}\r\n            </NavLink>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Path } from './Routes'\r\nimport s from './Header.module.css'\r\nimport { CustomNavlink } from '../../common/c4-Navlink/CustomNavlink'\r\n\r\n\r\nconst Header: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <CustomNavlink to={Path.SIGN_IN_PATH} body={\"sign-in\"}/>\r\n            <CustomNavlink to={Path.SIGN_UP_PATH} body={\"sign-up\"}/>\r\n            <CustomNavlink to={Path.FORGOT_PATH} body={\"forgot\"}/>\r\n            <CustomNavlink to={Path.PASSWORD_ASSISTANCE_PATH} body={\"assistance\"}/>\r\n            <CustomNavlink to={Path.PROFILE_PATH} body={\"profile\"}/>\r\n            <CustomNavlink to={Path.TEST_PATH} body={\"test\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport  thunkMiddleware from 'redux-thunk'\r\nimport { signInReducer } from '../../features/f1-Sign-in/s2-BLL/Sign-in-reducer'\r\nimport { signUpReducer } from '../../features/f2-Registration/r2-BLL/Sign-up-reducer'\r\nimport { forgotReducer } from '../../features/f3-Forgot/f2-BLL/Forgot-reducer'\r\nimport { assistanceReducer } from '../../features/f4-Password-assistance/a2-BLL/assistance-reducer'\r\nimport { profileReducer } from '../../features/f5-Profile/p2-BLL/Profile-reducer'\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    register: signUpReducer,\r\n    forgot: forgotReducer,\r\n    assistance: assistanceReducer,\r\n    profile: profileReducer,\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react'\r\nimport './App.css'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport Main from './main/m1-UI/Main'\r\nimport store from './main/m2-BLL/store'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n          <HashRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n          </HashRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}