{"version":3,"sources":["common/c1-Input/InputText.module.css","features/f6-PacksList/p1-UI/components/Pagination/Pagination.module.css","features/f5-Profile/p1-UI/Profile.module.css","features/f1-Sign-in/s1-UI/Sign-in.module.css","features/f6-PacksList/p1-UI/components/CustomRange/CustomRange.module.css","features/f2-Registration/r1-UI/SignUp.module.css","features/f3-Forgot/f1-UI/Forgot.module.css","features/f6-PacksList/p1-UI/components/CheckBoxToggle/ToggleCheckBox.module.css","features/f1-Sign-in/s1-UI/FormLogin/FormLogin.module.css","features/f6-PacksList/p1-UI/PacksList.module.css","features/f7-Cards/c1-UI/Cards.module.css","common/c9-Test/Test.module.css","common/c3-Checkbox/Checkbox.module.css","common/c2-Button/Button.module.css","features/f4-Password-assistance/a1-UI/Assistance.module.css","features/f7-Cards/c1-UI/Component/CardsTableBody.module.css","common/c10-Table/Table.module.css","common/c4-Navlink/CustomNavlink.module.css","features/f7-Cards/c1-UI/Component/Search.module.css","common/c5-Loader/loader.module.css","common/CommonStyle.module.css","main/m1-UI/Header.module.css","features/f2-Registration/r3-DAL/SignUpApi.ts","common/c1-Input/InputText.tsx","common/c1-Input/InputTextPage.tsx","common/c3-Checkbox/Checkbox.tsx","common/c3-Checkbox/CheckBoxPage.tsx","common/c2-Button/Button.tsx","common/c2-Button/ButtonPage.tsx","common/c9-Test/Test.tsx","features/f1-Sign-in/s3-DAL/SignAPI.ts","features/f1-Sign-in/s2-BLL/Sign-in-reducer.ts","common/c1-Input/InputPassword.tsx","features/f1-Sign-in/s1-UI/FormLogin/FormLogin.tsx","assets/img/preloader.svg","common/c5-Loader/Preloader.tsx","features/f1-Sign-in/s1-UI/Sign-in.tsx","features/f1-Sign-in/s1-UI/SignInContainer.tsx","features/f2-Registration/r2-BLL/Sign-up-reducer.ts","features/f2-Registration/r1-UI/SignUp.tsx","features/f2-Registration/r1-UI/SignUpContainer.tsx","features/f5-Profile/p3-DAL/Profile-API.ts","features/f5-Profile/p2-BLL/Profile-reducer.ts","features/f5-Profile/p1-UI/Profile.tsx","features/f3-Forgot/f1-UI/Forgot.tsx","features/f3-Forgot/f3-DAL/forgotAPI.ts","features/f3-Forgot/f2-BLL/Forgot-reducer.ts","features/f3-Forgot/f1-UI/ForgotContainer.tsx","features/f4-Password-assistance/a1-UI/Assistance.tsx","features/f4-Password-assistance/a3-DAL/assistanceAPI.ts","features/f4-Password-assistance/a2-BLL/assistance-reducer.ts","features/f4-Password-assistance/a1-UI/AssistanceContainer.tsx","common/c10-Table/Table.tsx","features/f6-PacksList/p3-DAL/packsListApi.ts","features/f6-PacksList/p2-BLL/packsList-reducer.ts","features/f6-PacksList/p1-UI/components/Pagination/Pagination.tsx","features/f6-PacksList/p1-UI/components/Select/MySelect.tsx","common/c4-Navlink/CustomNavlink.tsx","features/f6-PacksList/p1-UI/TableBodyForCardPacks.tsx","features/f6-PacksList/p4-Test/test.ts","main/m1-UI/Routes.tsx","features/f6-PacksList/p1-UI/components/CheckBoxToggle/ToggleCheckBox.tsx","features/f6-PacksList/p1-UI/components/CustomRange/CustomRange.tsx","features/f6-PacksList/p1-UI/PacksList.tsx","features/f7-Cards/c3-DAL/cardsApi.ts","features/f7-Cards/c2-BLL/cards-reducer.ts","features/f7-Cards/c1-UI/Component/CardsTableBody.tsx","features/f7-Cards/c1-UI/Component/Search.tsx","features/f7-Cards/c1-UI/CardsContainer.tsx","main/m1-UI/Header.tsx","main/m1-UI/Main.tsx","main/m2-BLL/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","StatusCode","InputText","type","onChange","onChangeText","onKeyPress","onEnter","setError","label","error","className","restProps","finalInputClassName","s","errorInput","input","wrapper","e","currentTarget","value","key","onBlur","required","animationBorder","InputTextPage","useState","text","setText","console","log","Checkbox","onChangeChecked","children","spanClassName","checkbox","checked","CheckboxPage","setChecked","Button","red","finalClassName","default","btn","ButtonPage","onClick","alert","Test","item","instance","axios","create","withCredentials","baseURL","signAPI","user","post","initialState","loading","userId","isAuth","loaderAC","errorRequestAC","setIsAuth","InputPassword","passwordType","setPasswordType","autoComplete","onPassword","FormLogin","React","memo","onChangeEmail","onChangePassword","email","password","onChangeRememberMe","rememberMe","wrapperInputs","checkboxWrapper","Preloader","loader","src","alt","SignIn","requestLogin","finallySignInClass","signInContent","forgot","to","Path","FORGOT_PATH","link","registration","SIGN_UP_PATH","SignInContainer","dispatch","useDispatch","useSelector","state","signIn","setEmail","setPassword","setRememberMe","useCallback","PROFILE_PATH","loginData","then","res","data","_id","catch","errorMessage","response","finally","requestApi","payload","rej","isSign","isFetch","returnServerError","fetchingRegistration","SignUp","serverError","isFetching","resetErrors","formHandler","pass","setPass","newPass","setNewPass","login","setLogin","errorLogin","errorPass","setErrorPass","errorNewPass","setErrorNewPass","useEffect","errorsJSX","map","err","pageWrapper","formStyle","disabled","push","length","SignUpContainer","register","isSignUp","SIGN_IN_PATH","status","success","signUp","fail","serverResponse","registrationNewUser","profileAPI","delete","auth","setLoading","logoutThunk","Profile","profile","classes","avatar","description","ava","name","numbers","cards","list","Forgot","isSuccess","sendInstruction","img","btnForgot","forgotApi","from","message","initialstate","ForgotContainer","restorePassword","Assistance","sendNewPassword","btnSetPassword","assistanceApi","token","resetPasswordToken","requestStatus","setRequestStatus","AssistanceContainer","assistance","useParams","info","setNewPassword","Table","tableHeaders","tableBody","headersJSX","header","headerTitle","table","PacksListApi","page","pageCount","packName","min","max","user_id","sortPacks","get","params","cardsPack","id","put","cardPacks","cardsCount","created","grade","more_id","path","private","rating","shots","updated","user_name","__v","cardPacksTotalCount","maxCardsCount","minCardsCount","setPageCount","count","setPage","setPreloader","Pagination","totalCount","onChangePage","acc","visPre","setVisPre","visNext","setVisNext","pageNumbers","Math","ceil","pages","i","previosPage","nextPage","pageNextAcc","pagePreviosAcc","paginationWrapper","pagination","title","visible","active","MySelect","options","onChangeCountCards","optionElement","option","valueOf","CustomNavlink","body","activeClassName","a","TableBodyForCardPacks","edit","setEdit","editId","setEditId","changeNameCardPack","setChangeNameCardPack","changeAuthorCardPack","setChangeAuthorCardPack","myId","packsList","JSX","jsDate","Date","parse","lastUpdate","getDate","getMonth","getFullYear","getHours","getMinutes","CARDS_LIST_PATH","innerText","nameCardsPack","this","testData","setTestData","int","rnd","floor","random","ToggleCheckBox","superInput","checkboxSwitchChecked","checkboxSwitch","CustomRange","getMin","getMax","width","setMin","setMax","minPoint","setMinPoint","editMin","setEditMin","maxVal","setMaxVal","minVal","setMinVal","minEnabled","setMinEnabled","maxEnabled","setMaxEnabled","mouseMoveHandler","clientX","mouseDownHandler","mouseUpHandler","slider","style","onMouseMove","event","offsetLeft","minDrag","left","onMouseUp","onMouseDown","onDoubleClick","textMin","autoFocus","border","maxLength","maxDrag","textMax","PacksList","searchPackName","setSearchPackName","setPackName","myPacks","setMyPacks","sortPack","setSortPack","packs","warn","getPacksCards","test","packsListHeaderWrapper","marginRight","marginTop","packListTableWrapper","packsListFooterWrapper","packListPageSelector","cardsApi","packListId","cardsPack_id","card","cardsList","cardsTotalCount","searchQuestion","searchAnswer","getCardsTC","cardsListId","TableBody","question","setQuestion","answer","setAnswer","cardListView","filter","indexOf","btnCRUD","getState","updateCardTC","Search","placeholder","btnSearch","setSearchAnswer","CardsContainer","history","useHistory","urlParams","useRouteMatch","cardPackId","backWrapper","back","goBack","height","viewBox","fill","xmlns","d","stroke","strokeWidth","addCard","footerWrapper","Routes","commonStyle","container","exact","render","PASSWORD_ASSISTANCE_PATH","TEST_PATH","LERGNOM_PACKS_LIST_PATH","Header","Main","reducers","combineReducers","action","sort","b","localeCompare","store","createStore","applyMiddleware","thunkMiddleware","window","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fe1633c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputText_wrapper__P-XLC\",\"input\":\"InputText_input__2WQqQ\",\"label\":\"InputText_label__9LF7I\",\"animationBorder\":\"InputText_animationBorder__3c9Kr\",\"errorInput\":\"InputText_errorInput__Abwxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationWrapper\":\"Pagination_paginationWrapper__1cdlA\",\"pagination\":\"Pagination_pagination__1Masi\",\"prev\":\"Pagination_prev__2d2ow\",\"next\":\"Pagination_next__14lrq\",\"active\":\"Pagination_active__7u87g\",\"visible\":\"Pagination_visible__l_VEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__1_WYY\",\"avatar\":\"Profile_avatar__bfxiN\",\"description\":\"Profile_description__15ma-\",\"ava\":\"Profile_ava__1es6b\",\"numbers\":\"Profile_numbers__8wtVS\",\"cards\":\"Profile_cards__2QIg5\",\"input\":\"Profile_input__33FOh\",\"list\":\"Profile_list__1K_iR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sign-in_wrapper__3e8lP\",\"signInContent\":\"Sign-in_signInContent__2A5T7\",\"forgot\":\"Sign-in_forgot__1At_I\",\"link\":\"Sign-in_link__2Ynd-\",\"registration\":\"Sign-in_registration__1_7Wb\",\"error\":\"Sign-in_error__2y4ue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"CustomRange_slider__1D8hQ\",\"min\":\"CustomRange_min__PKM_P\",\"minDrag\":\"CustomRange_minDrag__YzQEe\",\"text\":\"CustomRange_text__134iK\",\"textNone\":\"CustomRange_textNone__AxImd\",\"max\":\"CustomRange_max__1QlpV\",\"maxDrag\":\"CustomRange_maxDrag__2RQIK\",\"textMin\":\"CustomRange_textMin__cdFg_\",\"textMax\":\"CustomRange_textMax__1uAVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"SignUp_pageWrapper__3Rh8U\",\"formStyle\":\"SignUp_formStyle__2zORH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Forgot_wrapper__1OKau\",\"errorMessage\":\"Forgot_errorMessage__EVXd0\",\"img\":\"Forgot_img__1kSvz\",\"btnForgot\":\"Forgot_btnForgot__13F-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"ToggleCheckBox_default__kJ-Rk\",\"checkbox\":\"ToggleCheckBox_checkbox__12r1t\",\"checkboxSwitch\":\"ToggleCheckBox_checkboxSwitch__32Flc\",\"checkboxSwitchChecked\":\"ToggleCheckBox_checkboxSwitchChecked__3O29l\",\"superInput\":\"ToggleCheckBox_superInput__3dCNP\",\"errorInput\":\"ToggleCheckBox_errorInput__3flSa\",\"error\":\"ToggleCheckBox_error__1_iHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInputs\":\"FormLogin_wrapperInputs__2Axal\",\"checkboxWrapper\":\"FormLogin_checkboxWrapper__4YyGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsListFooterWrapper\":\"PacksList_packsListFooterWrapper__1BkQ0\",\"packsListHeaderWrapper\":\"PacksList_packsListHeaderWrapper__SAk5n\",\"packListPageSelector\":\"PacksList_packListPageSelector__yAIDU\",\"packListTableWrapper\":\"PacksList_packListTableWrapper__3hjUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backWrapper\":\"Cards_backWrapper__6RZaz\",\"back\":\"Cards_back__15b5m\",\"addCard\":\"Cards_addCard__2xTOa\",\"footerWrapper\":\"Cards_footerWrapper__3bA--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Test_item__Z6G12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Checkbox_wrapper__1mWyy\",\"checkbox\":\"Checkbox_checkbox__3onIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__308sl\",\"default\":\"Button_default__2L95g\",\"red\":\"Button_red__2Ya8C\",\"button\":\"Button_button__3hV6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"Assistance_errorMessage__UWcam\",\"wrapper\":\"Assistance_wrapper__3EtV5\",\"btnSetPassword\":\"Assistance_btnSetPassword__3MGvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnCRUD\":\"CardsTableBody_btnCRUD__32hS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__31ibP\",\"link\":\"Table_link__1TqeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"a\":\"CustomNavlink_a__2IJJ6\",\"active\":\"CustomNavlink_active__1oAf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__3IBTV\",\"btnSearch\":\"Search_btnSearch__1E4oI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__2rvVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CommonStyle_container__PUkOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__oyhAD\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n});\r\n\r\n\r\nexport type ResponseType<D = {}> = {\r\n    status: StatusCode\r\n    statusText: string\r\n    Data: D\r\n}\r\n\r\nexport enum StatusCode {\r\n    success = 201,\r\n    fail = 400\r\n}\r\n\r\nexport type AddedUserType = {\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n}\r\n\r\nexport type ErrorType = {\r\n    error: string,\r\n    email: string,\r\n    in: string,\r\n}\r\n\r\n\r\nexport const requestApi = {\r\n    register(payload: { email: string, password: string }) {\r\n        return instance.post<ResponseType<AddedUserType | ErrorType>>(`auth/register`, payload).then(res => res\r\n        ).catch(rej => rej.response);\r\n    },\r\n};\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './InputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    setError?: (error: string) => void\r\n    error?: string\r\n    label?: string\r\n    spanClassName?: string\r\n}\r\n\r\nexport const InputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter, setError,\r\n        label, error,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        onChange && onChange(e) // если есть пропс onChange то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter() // если есть пропс onEnter и если нажата кнопка Enter, то вызвать его\r\n    }\r\n    const onBlurcallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        if (!e.currentTarget.value) {\r\n            setError && setError('field is required')\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${s.input} ${className}`\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                onBlur={onBlurcallback}\r\n                className={finalInputClassName}\r\n                required // меняет поведение label!!!\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n\r\n            />\r\n            <span className={s.animationBorder}> </span>\r\n            <label className={s.label}>{label}</label>\r\n        </div>\r\n    )\r\n} // TODO: required?","import React, {useState} from 'react'\r\nimport { InputText } from './InputText'\r\n\r\nexport const InputTextPage = () => {\r\n\r\n    const [text, setText] = useState<string>('')\r\n    const [error, setError] = useState('')\r\n\r\n    const showAlert = () => {\r\n        console.log(text)\r\n    }\r\n\r\n    return (\r\n            <InputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                setError={setError}\r\n                label={\"E-mail\"}\r\n                error={error}\r\n            />\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Checkbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps в том числе checked\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.wrapper}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <p className={s.spanClassName}>{children}</p>}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Checkbox","import { useState } from 'react'\r\nimport Checkbox from './Checkbox'\r\n\r\nexport const CheckboxPage = () => {\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    return (\r\n        <Checkbox\r\n            checked={checked}\r\n            onChangeChecked={setChecked}\r\n        >\r\n            children {/*// этот текст попадёт в children*/}\r\n        </Checkbox>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.btn} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Button from './Button'\r\n\r\nexport const ButtonPage = () => {\r\n\r\n    const showAlert = () => {\r\n        alert('button was clicked')\r\n    }\r\n\r\n    return (\r\n\r\n        <Button\r\n            // red // пропсу с булевым значением не обязательно указывать true\r\n            onClick={showAlert}\r\n        >\r\n            delete {/*// название кнопки попадёт в children*/}\r\n        </Button>\r\n\r\n    )\r\n}","import { InputTextPage } from '../c1-Input/InputTextPage'\r\nimport s from './Test.module.css'\r\nimport { CheckboxPage } from '../c3-Checkbox/CheckBoxPage'\r\nimport { ButtonPage } from '../c2-Button/ButtonPage'\r\n\r\nexport const Test = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={s.item}><span>Component Input - </span><InputTextPage /></div>\r\n            <div className={s.item}><span>Component Button - </span><ButtonPage /></div>\r\n            <div className={s.item}><span>Component Checkbox - </span><CheckboxPage /></div>\r\n        </>\r\n    )\r\n}","import axios from \"axios\";\r\nimport {UserType} from \"../s2-BLL/Sign-in-reducer\";\r\n\r\ntype LoginUser = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n});\r\n\r\n\r\nexport const signAPI = {\r\n    authRequest(user: LoginUser) {\r\n        return instance.post<UserType>(\"auth/login\", user);\r\n    },\r\n    authMe() {\r\n        return instance.post('auth/me');\r\n    },\r\n    authMeUpdate(newName: string, avatar: string) {\r\n        return instance.put('auth/me', {newName, avatar});\r\n    },\r\n\r\n};","import {Dispatch} from \"redux\";\r\nimport {signAPI} from \"../s3-DAL/SignAPI\";\r\n\r\nconst initialState = {\r\n    user: null as null | UserType,\r\n    loading: false,\r\n    error: '',\r\n    userId: '',\r\n    isAuth: false,\r\n};\r\n\r\nexport const signInReducer = (state: SignInStateType = initialState, action: ActionsType): SignInStateType => {\r\n    switch (action.type) {\r\n        case \"SIGN-IN/CHECK_IS_AUTH\": {\r\n            return {...state, isAuth: action.isAuth};\r\n        }\r\n        case \"SIGN-IN/USER_ID\": {\r\n            return {...state, userId: action.userId};\r\n        }\r\n        case \"SIGN-IN/AUTH-USER\":\r\n            return {...state, user: action.user};\r\n        case \"SIGN-IN/LOADER\":\r\n            return {...state, loading: action.loading};\r\n        case \"SIGN-IN/ERROR\":\r\n            return {...state, error: action.error};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst authUserAC = (user: UserType) => ({type: \"SIGN-IN/AUTH-USER\", user} as const);\r\nconst loaderAC = (loading: boolean) => ({type: \"SIGN-IN/LOADER\", loading} as const);\r\nexport const errorRequestAC = (error: string) => ({type: \"SIGN-IN/ERROR\", error} as const);\r\n//action lergnom\r\ntype GetUserIdActionType = ReturnType<typeof getUserId>;\r\nconst getUserId = (userId: string) => ({type: 'SIGN-IN/USER_ID', userId} as const);\r\ntype CheckIsAuthActionType = ReturnType<typeof setIsAuth>\r\nconst setIsAuth = (isAuth: boolean) => ({type: 'SIGN-IN/CHECK_IS_AUTH', isAuth} as const);\r\n//thunk lergnom no need\r\nexport const checkUserIsAuth = () => async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        const response = await signAPI.authMe();\r\n\r\n        if (response.status === 200) {\r\n            dispatch(setIsAuth(true));\r\n        }\r\n    } catch (err) {\r\n        dispatch(setIsAuth(false));\r\n    }\r\n};\r\n\r\n\r\n// thunks\r\nexport const userAuthRequestTC = (loginData: LoginData) => (dispatch: Dispatch) => {\r\n    dispatch(loaderAC(true));\r\n    signAPI.authRequest(loginData)\r\n        .then(res => {\r\n            dispatch(authUserAC(res.data));\r\n            dispatch(getUserId(res.data._id));\r\n            dispatch(setIsAuth(true));\r\n        })\r\n        .catch(e => {\r\n            const errorMessage = e.response?.data?.error || \"Unknown error!\";\r\n            dispatch(errorRequestAC(errorMessage));\r\n        })\r\n        .finally(() => dispatch(loaderAC(false)));\r\n};\r\n// types\r\n\r\ntype SignInStateType = typeof initialState\r\n\r\nexport type UserType = {\r\n    avatar: string,\r\n    created: string,\r\n    email: string,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    publicCardPacksCount: number,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    tokenDeathTime: number,\r\n    updated: string,\r\n    verified: boolean,\r\n    __v: number,\r\n    _id: string,\r\n    deviceTokens: any\r\n}\r\n\r\ntype LoginData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof authUserAC>\r\n    | ReturnType<typeof loaderAC>\r\n    | ReturnType<typeof errorRequestAC>\r\n    | GetUserIdActionType\r\n    | CheckIsAuthActionType","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react'\r\nimport s from './InputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    setError?: (error: string) => void\r\n    error?: string\r\n    label?: string\r\n    spanClassName?: string\r\n}\r\n\r\nexport const InputPassword: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter, setError,\r\n        label, error,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // если есть пропс onChange то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter() // если есть пропс onEnter и если нажата кнопка Enter, то вызвать его\r\n    }\r\n    const onBlurcallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        if (!e.currentTarget.value) {\r\n            setError && setError('field is required')\r\n        }\r\n    }\r\n\r\n    const [passwordType, setPasswordType] = useState(\"password\")\r\n\r\n    const openPasswordHandler = () => {\r\n        passwordType === \"text\" ? setPasswordType(\"password\") : setPasswordType(\"text\")\r\n    }\r\n\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${s.input} ${className}`\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                onBlur={onBlurcallback}\r\n                className={finalInputClassName}\r\n                autoComplete={\"off\"}\r\n                required // меняет поведение label!!!\r\n                type={passwordType}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <span className={s.onPassword} onClick={openPasswordHandler}> </span>\r\n\r\n            <span className={s.animationBorder}> </span>\r\n            <label className={s.label}>{label}</label>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./FormLogin.module.css\";\r\nimport {InputText} from \"../../../../common/c1-Input/InputText\";\r\nimport {InputPassword} from \"../../../../common/c1-Input/InputPassword\";\r\nimport Checkbox from \"../../../../common/c3-Checkbox/Checkbox\";\r\n\r\ntype FormLoginType = {\r\n    onChangeEmail: (email: string) => void\r\n    onChangePassword: (password: string) => void\r\n    onChangeRememberMe: (rememberMe: boolean) => void\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error: string\r\n}\r\n\r\nexport const FormLogin: React.FC<FormLoginType> = React.memo((\r\n    {onChangeEmail, onChangePassword, email, password, onChangeRememberMe, rememberMe, error}\r\n) => {\r\n\r\n    return (\r\n        <div className={s.wrapperInputs}>\r\n            <InputText\r\n                value={email}\r\n                onChangeText={onChangeEmail}\r\n                setError={() => true}\r\n                error={error}\r\n                label={\"Email\"}\r\n                className={s.input}\r\n            />\r\n            <InputPassword\r\n                value={password}\r\n                onChangeText={onChangePassword}\r\n                setError={() => true}\r\n                error={error}\r\n                label={\"Password\"}\r\n                className={s.input}\r\n            />\r\n            <div className={s.checkboxWrapper}>\r\n                <Checkbox onChangeChecked={onChangeRememberMe} checked={rememberMe}>Remember me </Checkbox>\r\n            </div>\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/preloader.2f856a33.svg\";","import React from \"react\";\r\nimport loader from \"../../assets/img/preloader.svg\"\r\nimport s from \"./loader.module.css\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={s.loader}>\r\n            <img src={loader} alt=\"\"/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Sign-in.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {FormLogin} from \"./FormLogin/FormLogin\";\r\nimport {Preloader} from \"../../../common/c5-Loader/Preloader\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\n\r\ntype PropsType = {\r\n    loading: boolean\r\n    error: string\r\n    email: string\r\n    onChangeEmail: (email: string) => void\r\n    onChangePassword: (password: string) => void\r\n    onChangeRememberMe: (rememberMe: boolean) => void\r\n    password: string\r\n    rememberMe: boolean\r\n    requestLogin: () => void\r\n}\r\n\r\nexport const SignIn: React.FC<PropsType> = ({\r\n    loading,\r\n    error,\r\n    email,\r\n    requestLogin,\r\n    onChangeEmail,\r\n    onChangePassword,\r\n    onChangeRememberMe,\r\n    password,\r\n    rememberMe,\r\n}) => {\r\n\r\n    const finallySignInClass = `${loading ? s.signInContent : \"\"}`\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {loading && <Preloader/>}\r\n            <div className={finallySignInClass}>\r\n                <h1>It-incubator</h1>\r\n                <h2>Sign in</h2>\r\n                <FormLogin onChangeEmail={onChangeEmail}\r\n                           onChangePassword={onChangePassword}\r\n                           onChangeRememberMe={onChangeRememberMe}\r\n                           email={email}\r\n                           password={password}\r\n                           rememberMe={rememberMe}\r\n                           error={error}\r\n                />\r\n                <div className={s.forgot}>\r\n                    <NavLink to={Path.FORGOT_PATH} className={s.link}>Forgot Password?</NavLink>\r\n                </div>\r\n                <div className={s.error}>{error}</div>\r\n                <Button onClick={requestLogin}>Login</Button>\r\n                <div className={s.registration}>\r\n                    <p>Don't have an account? </p>\r\n                    <NavLink to={Path.SIGN_UP_PATH} className={s.link}>Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {errorRequestAC, userAuthRequestTC, UserType} from \"../s2-BLL/Sign-in-reducer\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\nimport {SignIn} from \"./Sign-in\";\r\n\r\n\r\nexport const SignInContainer: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector<AppStoreType, UserType | null>(state => state.signIn.user)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.signIn.loading)\r\n    const error = useSelector<AppStoreType, string>(state => state.signIn.error)\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = useCallback((email: string) => {\r\n        error && dispatch(errorRequestAC(''))\r\n        setEmail(email)\r\n    }, [error, dispatch])\r\n\r\n    const onChangePassword = useCallback((password: string) => {\r\n        error && dispatch(errorRequestAC(''))\r\n        setPassword(password)\r\n    }, [error, dispatch])\r\n\r\n    const onChangeRememberMe = useCallback((checked: boolean) => {\r\n        error && dispatch(errorRequestAC(''))\r\n        setRememberMe(checked)\r\n    }, [error, dispatch])\r\n\r\n    const requestLogin = () => {\r\n        dispatch(userAuthRequestTC({email, password, rememberMe}))\r\n    }\r\n\r\n    if (user) {\r\n        return <Redirect to={Path.PROFILE_PATH}/>\r\n    }\r\n\r\n    return (\r\n        <SignIn\r\n            loading={loading}\r\n            error={error}\r\n            email={email}\r\n            onChangeEmail={onChangeEmail}\r\n            onChangePassword={onChangePassword}\r\n            onChangeRememberMe={onChangeRememberMe}\r\n            password={password}\r\n            rememberMe={rememberMe}\r\n            requestLogin={requestLogin}\r\n        />\r\n    )\r\n}","import {AxiosResponse} from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AddedUserType, ErrorType, requestApi, StatusCode} from \"../r3-DAL/SignUpApi\";\r\n\r\nconst initialState = {\r\n    error: [] as Array<string>,\r\n    isSign: false,\r\n    isFetch: false\r\n};\r\n\r\nexport const signUpReducer = (state: SignUpStateType = initialState, action: ActionTypes): SignUpStateType => {\r\n    switch (action.type) {\r\n        case \"SIGN-UP/FETCHING\": {\r\n            return {...state, isFetch: action.isFetch};\r\n        }\r\n        case \"SIGN-UP/SET_SIGN_UP\": {\r\n            return {...state, isSign: action.signUp};\r\n        }\r\n        case \"SIGN-UP/SERVER_ERROR\": {\r\n            return {...state, error: action.error};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n// action\r\nexport const returnServerError = (error: Array<string>) => ({type: \"SIGN-UP/SERVER_ERROR\", error} as const);\r\nexport const isSignUp = (signUp: boolean) => ({type: \"SIGN-UP/SET_SIGN_UP\", signUp} as const);\r\nexport const fetchingRegistration = (isFetch: boolean) => ({type: \"SIGN-UP/FETCHING\", isFetch} as const);\r\n\r\n// thunk\r\nexport const registrationNewUser = (login: string, pass: string) => (dispatch: Dispatch<ActionTypes>) => {\r\n    dispatch(fetchingRegistration(true));\r\n    requestApi.register({email: login, password: pass})\r\n        .then((response: AxiosResponse<AddedUserType & ErrorType>) => {\r\n            switch (response.status) {\r\n                case StatusCode.success: {\r\n                    //Take User if needs\r\n                    // const user: AddedUserType = response.data;\r\n                    alert(\"Вы успешно зарегистрировались  :)\");\r\n                    dispatch(isSignUp(true));\r\n                    break;\r\n                }\r\n                case StatusCode.fail: {\r\n                    const serverResponse: ErrorType = response.data;\r\n                    dispatch(returnServerError([serverResponse.error]));\r\n                    break;\r\n                }\r\n                default: {\r\n                    dispatch(returnServerError(['Some error']));\r\n                    break;\r\n                }\r\n            }\r\n        })\r\n        .catch((rej) => {\r\n            dispatch(returnServerError(['Some error on Server. We work with it.']));\r\n        }).finally(() => {\r\n            dispatch(fetchingRegistration(false));\r\n        }\r\n    );\r\n};\r\n\r\n// types\r\ntype SignUpStateType = typeof initialState\r\n\r\ntype ActionTypes = ReturnType<typeof returnServerError>\r\n    | ReturnType<typeof isSignUp>\r\n    | ReturnType<typeof fetchingRegistration>\r\n","import s from './SignUp.module.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {InputText} from \"../../../common/c1-Input/InputText\";\r\nimport {InputPassword} from \"../../../common/c1-Input/InputPassword\";\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {Preloader} from \"../../../common/c5-Loader/Preloader\";\r\n\r\ntype PropsType = {\r\n    serverError: Array<string>\r\n    isFetching: boolean\r\n    resetErrors: () => void\r\n    formHandler: (error: Array<string>, login: string, pass: string) => void\r\n}\r\n\r\nexport const SignUp: React.FC<PropsType> = ({\r\n    serverError,\r\n    isFetching,\r\n    resetErrors,\r\n    formHandler,\r\n}) => {\r\n\r\n    //Use state for fields\r\n    const [pass, setPass] = useState<string>('');\r\n    const [newPass, setNewPass] = useState<string>('');\r\n    const [login, setLogin] = useState<string>('');\r\n\r\n    //Define error on the form\r\n    let error: Array<string>;\r\n    const errorLogin = login ? '' : 'add your email';\r\n    const [errorPass, setErrorPass] = useState<string>('');\r\n    const [errorNewPass, setErrorNewPass] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        pass === '' ? setErrorPass('field is required') : setErrorPass('');\r\n        newPass === '' ? setErrorNewPass('field is required') : setErrorNewPass('');\r\n    }, [pass, newPass]);\r\n\r\n    const validateform = () => {\r\n        error = [];\r\n        //Check fields before query\r\n        login === '' && error.push(\"Error your login field empty\\n\");\r\n        (pass || newPass) === '' && error.push(\"Password field empty\\n\");\r\n        pass.length < 8 && error.push(\"Password should be more  7 symbols\\n\");\r\n        pass !== newPass && error.push(\"Passwords don't match!\\n\");\r\n        formHandler(error, login, pass)\r\n    };\r\n\r\n\r\n    const errorsJSX = serverError.map(err => {\r\n        return (\r\n            <li key={err}>\r\n                {err}\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={s.pageWrapper}>\r\n            {isFetching && <Preloader/>}\r\n            <h1>it-incubator</h1>\r\n            <h2>SignUp</h2>\r\n            <form>\r\n                <div className={s.formStyle}>\r\n\r\n                    <InputText\r\n                        value={login}\r\n                        onChangeText={setLogin}\r\n                        error={errorLogin}\r\n                        label={\"E-mail\"}\r\n                        onClick={resetErrors}\r\n                        disabled={isFetching}\r\n                    />\r\n                </div>\r\n                <div className={s.formStyle}>\r\n                    <InputPassword value={pass}\r\n                                   onChangeText={setPass}\r\n                                   error={errorPass}\r\n                                   onClick={resetErrors}\r\n                                   disabled={isFetching}\r\n                                   label={\"Password\"}\r\n                                   autoComplete={\"new-password\"} // влияет на автозаполнение браузером полей Email Password\r\n                    />\r\n                </div>\r\n                <div className={s.formStyle}>\r\n                    <InputPassword value={newPass}\r\n                                   onChangeText={setNewPass}\r\n                                   error={errorNewPass}\r\n                                   onClick={resetErrors}\r\n                                   disabled={isFetching}\r\n                                   label={\"Confirm password\"}\r\n                    />\r\n                </div>\r\n                <div className={s.formStyle}>\r\n                    <ul>\r\n                        {errorsJSX}\r\n                    </ul>\r\n                </div>\r\n                <Button onClick={validateform} disabled={isFetching}>\r\n                    SignUp\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {registrationNewUser, returnServerError} from '../r2-BLL/Sign-up-reducer';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SignUp} from \"./SignUp\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\n\r\nexport const SignUpContainer: React.FC = () => {\r\n\r\n    const serverError = useSelector<AppStoreType, Array<string>>(state => state.register.error);\r\n    const isSignUp = useSelector<AppStoreType, boolean>(state => state.register.isSign);\r\n    const isFetching = useSelector<AppStoreType, boolean>(state => state.register.isFetch);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const resetErrors = () => {\r\n        dispatch(returnServerError([]));\r\n    };\r\n\r\n    const formHandler = (error: Array<string>, login: string, pass: string) => {\r\n        if (!error.length) {\r\n            dispatch(registrationNewUser(login, pass)); //ThunkHere\r\n        } else {\r\n            dispatch(returnServerError(error)); //show error\r\n        }\r\n    };\r\n\r\n\r\n    if (isSignUp) {\r\n        return <Redirect to={Path.SIGN_IN_PATH}/>;\r\n    } //Redirect if success registration\r\n\r\n    return (\r\n        <SignUp\r\n            serverError={serverError}\r\n            isFetching={isFetching}\r\n            resetErrors={resetErrors}\r\n            formHandler={formHandler}/>\r\n    );\r\n};\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n})\r\n\r\nexport const profileAPI = {\r\n    logout () {\r\n        return instance.delete('auth/me')\r\n    },\r\n    setUserData () {\r\n        return instance.post('auth/me',{})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../p3-DAL/Profile-API\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    auth: true\r\n}\r\n\r\nexport const profileReducer = (state: ProfileState = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"PROFILE/ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"PROFILE/LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"PROFILE/AUTH\":\r\n            return {...state, auth: action.auth}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nconst setLoading = (loading: boolean) => {\r\n    return {type: 'PROFILE/LOADING', loading} as const\r\n}\r\n\r\nconst setError = (error: string | null) => {\r\n    return {type: 'PROFILE/ERROR', error} as const\r\n}\r\n\r\nconst setAuth = (auth: boolean) => {\r\n    return {type: 'PROFILE/AUTH', auth} as const\r\n}\r\n\r\n\r\n// thunks\r\n\r\nexport const logoutThunk = (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true))\r\n    profileAPI.logout()\r\n        .then(() => {\r\n            dispatch(setAuth(false))\r\n        })\r\n        .catch(error => {\r\n            dispatch(setError(error.response.data.error))\r\n            console.log(error.response.data.error)\r\n        })\r\n        .finally(() => dispatch(setLoading(false)))\r\n}\r\n\r\n// types\r\n\r\nexport type ProfileState = {\r\n    loading: boolean\r\n    error: null | string\r\n    auth: boolean\r\n}\r\n\r\ntype SetLoading = ReturnType<typeof setLoading>\r\ntype SetError = ReturnType<typeof setError>\r\ntype SetAuth = ReturnType<typeof setAuth>\r\ntype ActionType = SetError | SetLoading | SetAuth","import React from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {UserType} from \"../../f1-Sign-in/s2-BLL/Sign-in-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\nimport {InputText} from \"../../../common/c1-Input/InputText\";\r\nimport {logoutThunk, ProfileState} from \"../p2-BLL/Profile-reducer\";\r\nimport {Preloader} from \"../../../common/c5-Loader/Preloader\";\r\n\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    const user = useSelector<AppStoreType, UserType | null>(state => state.signIn.user)\r\n    const profile = useSelector<AppStoreType, ProfileState >(state => state.profile)\r\n    const dispatch = useDispatch()\r\n\r\n    if (profile.loading) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    }\r\n\r\n    if (!user) {\r\n        return (\r\n            <Redirect to={Path.SIGN_IN_PATH}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.avatar}>\r\n                    <div className={classes.description}>\r\n                        <div className={classes.ava}>\r\n                            <img alt={\"avatar\"}/>\r\n                        </div>\r\n                        {\r\n                            user.name\r\n                                ? <span>{user.name}</span>\r\n                                : <span>USER-NAME</span>\r\n                        }\r\n\r\n                        <span>Front-end developer</span>\r\n                        <Button onClick={() => dispatch(logoutThunk)}>LOG OUT</Button>\r\n                    </div>\r\n                    <div className={classes.numbers}>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={classes.cards}>\r\n                    <div className={classes.input}>\r\n                        <h2>Packs list</h2>\r\n                        <InputText\r\n                            label={\"Search...\"}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.list}>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import s from './Forgot.module.css'\r\nimport { InputText } from '../../../common/c1-Input/InputText'\r\nimport Button from '../../../common/c2-Button/Button'\r\n\r\n\r\ntype PropsType = {\r\n    isSuccess: boolean\r\n    value: string\r\n    onChangeText: (value: string) => void\r\n    setError: (error: string) => void\r\n    error: string\r\n    sendInstruction: () => void\r\n}\r\n\r\nexport const Forgot: React.FC<PropsType> = ({\r\n    isSuccess,\r\n    value,\r\n    onChangeText,\r\n    setError,\r\n    error,\r\n    sendInstruction,\r\n}) => {\r\n\r\n    return (\r\n        isSuccess\r\n            ? <div className={s.wrapper}>\r\n                <h1>it-incubator</h1>\r\n                <h2>Check Email</h2>\r\n                <div className={s.img}>\r\n                    <img alt={\"check email\"} src={\"https://ehs.utoronto.ca/wp-content/uploads/2017/11/email-us.png\"}/>\r\n                </div>\r\n                <p>We’ve sent an Email with instructions to {value}</p>\r\n            </div>\r\n\r\n            : <div className={s.wrapper}>\r\n                <h1>it-incubator</h1>\r\n                <h2>Forgot your password?</h2>\r\n                <InputText\r\n                    value={value}\r\n                    onChangeText={onChangeText}\r\n                    setError={setError}\r\n                    error={error}\r\n                    label={\"E-mail\"}/>\r\n                <span className={s.errorMessage}> {error} </span>   \r\n                <p>Enter your email address and we will send you further instructions </p>\r\n                <Button\r\n                    onClick={sendInstruction}\r\n                    className={s.btnForgot}\r\n                >Send Instructions</Button>\r\n            </div>\r\n\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n})\r\n\r\nexport const forgotApi = {\r\n    sendForgotPassword(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"korsakov.ua.dn@gmail.com\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> password recovery link: \r\n                      <a href='https://korsakov-ua-dn.github.io/Friday#/assistance/$token$'>link</a></div>`\r\n        })\r\n    },\r\n    getPing() {\r\n        return instance.get(\"/ping\")\r\n\r\n    }\r\n}","import { Dispatch } from 'redux'\r\nimport { forgotApi } from '../f3-DAL/forgotAPI'\r\n\r\nconst initialstate = {\r\n    isSuccess: false, // меняет отображение компоненты Forgot на Check Email\r\n    loading: false, // отрисовуется в ForgotContainer\r\n    errorMessage: '' // отрисовуется в Forgot\r\n}\r\n\r\nexport const forgotReducer = (state: ForgotStateType = initialstate, action: ForgotActionType): ForgotStateType => {\r\n    switch (action.type) {\r\n        case \"FORGOT/SET_SUCCESS\": return {...state, isSuccess: action.success}\r\n        case \"FORGOT/SET_LOADING\": return {...state, loading: action.loading}\r\n        case \"FORGOT/SET_ERROR\": return {...state, errorMessage: action.errorMessage}\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nconst setSuccess = (success: boolean) => ({type: \"FORGOT/SET_SUCCESS\", success} as const)\r\nconst setLoading = (loading: boolean) => ({type: \"FORGOT/SET_LOADING\", loading} as const)\r\nconst setError = (errorMessage: string) => ({type: \"FORGOT/SET_ERROR\", errorMessage} as const)\r\n\r\n\r\n// thunks\r\nexport const restorePassword = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true))\r\n    forgotApi.sendForgotPassword(email)\r\n    .then(res => {\r\n        dispatch(setSuccess(true))\r\n    })\r\n    .catch(e => {\r\n        const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n        dispatch(setError(errorMessage))\r\n    })\r\n    .finally( () => dispatch(setLoading(false)) )\r\n}\r\n\r\n// types\r\nexport type ForgotStateType = typeof initialstate\r\n\r\nexport type ForgotActionType = ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setError>","import {useEffect, useState} from 'react'\r\nimport {Forgot} from './Forgot'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStoreType} from '../../../main/m2-BLL/store'\r\nimport {ForgotStateType, restorePassword} from '../f2-BLL/Forgot-reducer'\r\n\r\nexport const ForgotContainer: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const forgot = useSelector<AppStoreType , ForgotStateType>(state => state.forgot)\r\n\r\n    useEffect(() => { setError(forgot.errorMessage)}, [forgot.errorMessage])\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [error, setError] = useState(forgot.errorMessage)\r\n\r\n    const sendInstruction = () => {\r\n        dispatch(restorePassword(email))\r\n    }\r\n\r\n    return (\r\n        forgot.loading\r\n\r\n        ? <h1>Loading...</h1>\r\n\r\n        : <Forgot\r\n            isSuccess={forgot.isSuccess}\r\n            value={email}\r\n            onChangeText = {setEmail}\r\n            setError={setError}\r\n            error = {error}\r\n            sendInstruction={sendInstruction} />\r\n    )\r\n}","import s from './Assistance.module.css'\r\nimport {InputText} from '../../../common/c1-Input/InputText'\r\nimport Button from '../../../common/c2-Button/Button'\r\nimport React from 'react'\r\n\r\ntype PropsType = {\r\n    value: string\r\n    onChangeText: (value: string) => void\r\n    sendNewPassword: () => void\r\n    error: string\r\n}\r\n\r\nexport const Assistance: React.FC<PropsType> = ({\r\n    value,\r\n    onChangeText,\r\n    sendNewPassword,\r\n    error,\r\n}) => {\r\n\r\n    return (\r\n        error \r\n\r\n        ? <span className={s.errorMessage}>{ error }</span>\r\n\r\n        : <div className={s.wrapper}>\r\n            <h1>it-incubator</h1>\r\n            <h2>Create new password</h2>\r\n            <InputText\r\n                value={value}\r\n                onChangeText={onChangeText}\r\n                label={\"Password\"}/>\r\n            <p>Create new password and we will send you further instructions to email</p>\r\n            <Button\r\n                onClick={sendNewPassword}\r\n                className={s.btnSetPassword}\r\n            >Create new password</Button>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n})\r\n\r\nexport const assistanceApi = {\r\n    sendNewPassword(password: string, token: string) {\r\n        return instance.post(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken: token\r\n        })\r\n    },\r\n}","import { Dispatch } from 'redux'\r\nimport { assistanceApi } from '../a3-DAL/assistanceAPI'\r\n\r\nconst initialstate = {\r\n    requestStatus: false, // Redirect to Sign-in at AssistanceContainer\r\n    loading: false, // отрисовуется в AssistanceContainer\r\n    errorMessage: '', // прокидывается в Assistance\r\n}\r\n\r\nexport const assistanceReducer =\r\n    (state: AssistanceStateType = initialstate, action: AssistanceActionType): AssistanceStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ASSISTANCE/SET_REQUEST_STATUS\": return {...state, requestStatus: action.status}\r\n        case \"ASSISTANCE/SET_ERROR_MESSAGE\": return {...state, errorMessage: action.message}\r\n        case \"ASSISTANCE/SET_LOADING\": return {...state, loading: action.loading}\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nconst setRequestStatus = (status: boolean) => ({type: \"ASSISTANCE/SET_REQUEST_STATUS\", status} as const)\r\nconst setErrorMessage = (message: string) => ({type: \"ASSISTANCE/SET_ERROR_MESSAGE\", message} as const)\r\nconst setLoading = (loading: boolean) => ({type: \"ASSISTANCE/SET_LOADING\", loading} as const)\r\n\r\n// thunks\r\nexport const setNewPassword = (password: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true))\r\n    assistanceApi.sendNewPassword(password, token)\r\n    .then(res => {\r\n        console.log(res.data.info)\r\n        dispatch(setRequestStatus(true))\r\n    })\r\n    .then(res => dispatch(setRequestStatus(false)))\r\n    .catch(e => {\r\n        const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n        dispatch(setErrorMessage(errorMessage))\r\n    })\r\n    .finally(() => {\r\n        dispatch(setLoading(false))\r\n    })\r\n}\r\n\r\n// types\r\nexport type AssistanceStateType = typeof initialstate\r\n\r\nexport type AssistanceActionType = ReturnType<typeof setRequestStatus>\r\n    | ReturnType<typeof setErrorMessage>\r\n    | ReturnType<typeof setLoading>","import { Assistance } from './Assistance'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport { AssistanceStateType, setNewPassword } from '../a2-BLL/assistance-reducer'\r\nimport { AppStoreType } from '../../../main/m2-BLL/store'\r\nimport { Path } from '../../../main/m1-UI/Routes'\r\n\r\nexport const AssistanceContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const assistance = useSelector<AppStoreType, AssistanceStateType>(state => state.assistance)\r\n    const [password, setPassword] = useState('')\r\n\r\n    const { token } = useParams<{token: string}>()\r\n\r\n\r\n    const sendPassword = () => {\r\n        dispatch(setNewPassword(password, token))\r\n    }\r\n\r\n    if(assistance.requestStatus) return <Redirect to={Path.SIGN_IN_PATH}/>\r\n\r\n    return (\r\n        assistance.loading \r\n\r\n        ? <h1> Loading... </h1>\r\n\r\n        : <Assistance\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            sendNewPassword={sendPassword}\r\n            error={assistance.errorMessage} />\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Table.module.css';\r\n\r\nexport type HeaderOptionType = {\r\n    headerTitle: string,\r\n    link?: string,\r\n    onClick?: () => void,\r\n}\r\n\r\ntype TableTypeProps = {\r\n    tableHeaders: Array<HeaderOptionType>,\r\n    tableBody?: any;\r\n}\r\n\r\nexport const Table = ({tableHeaders, tableBody}: TableTypeProps) => {\r\n    //JSX for headers\r\n    const headersJSX = tableHeaders.map(header => {\r\n        return (\r\n            <th key={header.headerTitle}>{header.headerTitle} <span className={s.link}\r\n                                                                    onClick={header.onClick}>{header.link}</span></th>\r\n        );\r\n    });\r\n\r\n    // const bodyTableJSX = tableBody ? tableBody.map(table => {\r\n    //     return (<tr >\r\n    //         <th key={table._id} scope=\"row\">{table.name}</th>\r\n    //         <td>{table.cardsCount}</td>\r\n    //         <td>{table.updated}</td>\r\n    //         <td>{table.user_name}</td>\r\n    //         <td></td>\r\n    //     </tr>);\r\n    // }) : ['null'];\r\n\r\n    return (\r\n        <>\r\n            <table className={s.table}>\r\n                <thead>\r\n                <tr>\r\n                    {headersJSX}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {tableBody}\r\n                {/*{bodyTableJSX}*/}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n});\r\n\r\nexport  type ResponseType<D = {}> = {\r\n    cardPacks: D,\r\n    cardPacksTotalCount: number,\r\n    maxCardsCount: number,\r\n    minCardsCount: number,\r\n    page: number,\r\n    pageCount: number,\r\n    token: string,\r\n    tokenDeathTime: number,\r\n}\r\n\r\nexport type CardType = {\r\n    cardsCount: number,\r\n    created: string,\r\n    deckCover?: any,\r\n    grade: number,\r\n    more_id: string,\r\n    name: string,\r\n    path: string,\r\n    private: boolean,\r\n    rating: number,\r\n    shots: number,\r\n    type: string,\r\n    updated: string,\r\n    user_id: string,\r\n    user_name: string,\r\n    __v: number,\r\n    _id: string,\r\n}\r\n\r\nexport const PacksListApi = {\r\n    getCardsPacks(page?: number, pageCount?: number, packName?: string, min?: number, max?: number, user_id?: string, sortPacks?: string) {\r\n        return instance.get<ResponseType<Array<CardType>>>('cards/pack/', {\r\n            params: {\r\n                page,\r\n                pageCount,\r\n                packName,\r\n                min,\r\n                max,\r\n                user_id,\r\n                sortPacks\r\n            }\r\n        });\r\n    },\r\n\r\n    addNewCardPack(payload: { name: string, user_name?: string }) {\r\n        return instance.post<ResponseType>(`cards/pack/`, {cardsPack: payload});\r\n    },\r\n    deleteCardPack(id: string) {\r\n        return instance.delete(`cards/pack/?id=${id}`);\r\n    },\r\n    updateCardPack(payload: { _id: string, name: string, user_name?: string, private?: boolean }) {\r\n        return instance.put(`cards/pack/`, {cardsPack: payload});\r\n    },\r\n\r\n};","import {CardType, PacksListApi} from \"../p3-DAL/packsListApi\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n    cardPacks: [\r\n        {\r\n            cardsCount: 0,\r\n            created: \"2021-09-24T17:26:08.281Z\",\r\n            grade: 0,\r\n            more_id: \"60b4ae9724476dsdsdsdf0b043efea812\",\r\n            name: \"яяя\",\r\n            path: \"/def\",\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: \"pack\",\r\n            updated: \"2021-09-24T17:26:08.281Z\",\r\n            user_id: \"60b4ae9724476f0b043efea8\",\r\n            user_name: \"victor_bars_bars95@mail.ru\",\r\n            __v: 0,\r\n            _id: \"614e0a30128d3919c041bf0e\"\r\n        }\r\n    ],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 6,\r\n    isFetch: false,\r\n};\r\n\r\ntype ActionTypes =\r\n    SetPacksActionType\r\n    | SetPacksTotalCountActionType\r\n    | SetPageCountActionType\r\n    | SetPageActionType\r\n    | SetPreloaderActionType\r\n    | SortByNameCardPackActionType\r\n\r\ntype PacksListStateType = typeof initialState;\r\n\r\nexport const packsListReducer = (state: PacksListStateType = initialState, action: ActionTypes): PacksListStateType => {\r\n    switch (action.type) {\r\n        case \"PACKS/SORT_BY_NAME_PACK\": {\r\n            return {\r\n                ...state, cardPacks: state.cardPacks.sort((a, b) => a.name.localeCompare(b.name))\r\n            };\r\n        }\r\n        case \"PACKS/PRELOADER\": {\r\n            return {...state, isFetch: action.isFetch};\r\n        }\r\n\r\n        case \"PACKS/SET_PAGE\": {\r\n            return {...state, page: action.page};\r\n        }\r\n        case \"PACKS/SET_PAGE_COUNT\": {\r\n            return {...state, pageCount: action.count};\r\n        }\r\n        case \"PACKS/SET_PACKS_TOTAL_COUNT\": {\r\n            return {...state, cardPacksTotalCount: action.totalCount};\r\n        }\r\n        case \"PACKS/SET_PACKS\": {\r\n            return {...state, cardPacks: action.packs};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype SetPacksActionType = ReturnType<typeof setPacks>\r\ntype SetPacksTotalCountActionType = ReturnType<typeof setPacksTotalCount>\r\ntype SetPageCountActionType = ReturnType<typeof setPageCount>\r\ntype SetPageActionType = ReturnType<typeof setPage>\r\ntype SetPreloaderActionType = ReturnType<typeof setPreloader>\r\ntype SortByNameCardPackActionType = ReturnType<typeof sortByNameCardPack>\r\n\r\n//action\r\nconst setPacks = (packs: Array<CardType>) => ({type: 'PACKS/SET_PACKS', packs} as const);\r\nconst setPacksTotalCount = (totalCount: number) => ({type: 'PACKS/SET_PACKS_TOTAL_COUNT', totalCount} as const);\r\nexport const setPageCount = (count: number) => ({type: 'PACKS/SET_PAGE_COUNT', count} as const);\r\nexport const setPage = (page: number) => ({type: 'PACKS/SET_PAGE', page} as const);\r\n\r\n//set query\r\nexport const setPreloader = (isFetch: boolean) => ({type: 'PACKS/PRELOADER', isFetch} as const);\r\n\r\n//sortByNameCardPack\r\nexport const sortByNameCardPack = () => ({type: 'PACKS/SORT_BY_NAME_PACK'} as const);\r\n\r\n//thunk\r\nexport const getPacksCards = (page?: number, pageCount?: number, packName?: string, userId?: string, sortPacks?: string, min?: number, max?: number) => async (dispatch: Dispatch<ActionTypes>) => {\r\n    try {\r\n        dispatch(setPreloader(true));\r\n        const response = await PacksListApi.getCardsPacks(page, pageCount, packName, min, max, userId, sortPacks);\r\n        if (response.status === 200) {\r\n            dispatch(setPacks(response.data.cardPacks));\r\n            dispatch(setPacksTotalCount(response.data.cardPacksTotalCount));\r\n            dispatch(setPageCount(response.data.pageCount));\r\n            dispatch(setPage(response.data.page));\r\n        }\r\n    } catch (err) {\r\n        //Check and SHOW ERRORS NEED MAKE\r\n        console.warn('some error :(');\r\n    } finally {\r\n        dispatch(setPreloader(false));\r\n    }\r\n};\r\n\r\n\r\n//Function CRUD\r\n//Create new pack card\r\nexport const addNewPackCard = (payload: { name: string, user_name?: string }) => async (dispatch: Dispatch<ActionTypes>) => {\r\n    try {\r\n        dispatch(setPreloader(true));\r\n\r\n        const response = await PacksListApi.addNewCardPack(payload);\r\n        if (response.status === 201) {\r\n            dispatch(setPage(0));\r\n        }\r\n    } catch (err) {\r\n        //Check and SHOW ERRORS NEED MAKE\r\n        console.log('error :(', err);\r\n    } finally {\r\n        dispatch(setPreloader(false));\r\n    }\r\n};\r\n\r\n//Delete  pack card by ID\r\nexport const deletePackCardById = (id: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setPreloader(true));\r\n        const response = await PacksListApi.deleteCardPack(id);\r\n        if (response.status === 200) {\r\n            dispatch(setPage(0));\r\n        }\r\n    } catch (err) {\r\n        //Check and SHOW ERRORS NEED MAKE\r\n        console.log('error :(', err);\r\n    } finally {\r\n        dispatch(setPreloader(false));\r\n    }\r\n};\r\n\r\n\r\nexport const updatePackCard = (payload: { _id: string, name: string, user_name?: string, private?: boolean }) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setPreloader(true));\r\n        const response = await PacksListApi.updateCardPack(payload);\r\n        if (response.status === 200) {\r\n            dispatch(setPage(0));\r\n        }\r\n    } catch (err) {\r\n        //Check and SHOW ERRORS NEED MAKE\r\n        console.log('error :(', err);\r\n    } finally {\r\n        dispatch(setPreloader(false));\r\n    }\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport s from './Pagination.module.css';\r\n\r\ntype PaginationTypes = {\r\n    totalCount: number,\r\n    count: number,\r\n    page: number,\r\n    onChangePage: (page: number) => void\r\n    acc?: number\r\n}\r\n\r\nexport const Pagination = ({totalCount, count, page, onChangePage, acc = 10}: PaginationTypes) => {\r\n    const [visPre, setVisPre] = useState<boolean>(false);\r\n    const [visNext, setVisNext] = useState<boolean>(false);\r\n    let pageNumbers: number = Math.ceil(totalCount / count);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageNumbers; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const previosPage = page !== 1 ? page - 1 : 1;\r\n    const nextPage = page !== pageNumbers ? page + 1 : pageNumbers;\r\n    let pageNextAcc = (page + acc) > pageNumbers ? pageNumbers : page + acc;\r\n    let pagePreviosAcc = (page - acc) < 1 ? 1 : page - acc;\r\n\r\n    useEffect(() => {\r\n        previosPage === page ? setVisPre(true) : setVisPre(false);\r\n        nextPage === page ? setVisNext(true) : setVisNext(false);\r\n    }, [page, nextPage, previosPage]);\r\n\r\n    return (\r\n        <div className={s.paginationWrapper}>\r\n            <ul className={s.pagination}>\r\n                <li>\r\n                    <button title={`Page Previos`} className={`${visPre && s.visible}`} onClick={() => {\r\n                        onChangePage(page - 1);\r\n                    }}>❮\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button title={`Page 1`} className={`${visPre && s.visible}`} onClick={() => {\r\n                        onChangePage(1);\r\n                    }}>1\r\n                    </button>\r\n                </li>\r\n                <li><span title={`Page ${page - acc}`} onClick={() => {\r\n                    onChangePage(pagePreviosAcc);\r\n                }} className={`${visPre && s.visible}`}>...</span></li>\r\n                <li>\r\n                    <button className={`${visPre && s.visible}`} onClick={() => {\r\n                        onChangePage(previosPage);\r\n                    }} title={`Page ${pageNumbers}`}>{previosPage}</button>\r\n                </li>\r\n                <li>\r\n                    <button title={`Page ${page}`} className={s.active}>{page}</button>\r\n                </li>\r\n                <li>\r\n                    <button className={`${visNext && s.visible}`} onClick={() => {\r\n                        onChangePage(nextPage);\r\n                    }} title={`Page ${nextPage}`}>{nextPage}</button>\r\n                </li>\r\n\r\n                <li><span title={`Page ${page + acc}`} onClick={() => {\r\n                    onChangePage(pageNextAcc);\r\n                }} className={`${visNext && s.visible}`}>...</span></li>\r\n                <li>\r\n                    <button className={`${visNext && s.visible}`} onClick={() => {\r\n                        onChangePage(pageNumbers);\r\n                    }} title={`Page ${pageNumbers}`}>{pageNumbers}</button>\r\n                </li>\r\n                <li>\r\n                    <button className={`${visNext && s.visible}`} onClick={() => {\r\n                        onChangePage(page + 1);\r\n                    }} title={'page Next'}>❯\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\n\r\ntype MySelectTypeProps = {\r\n    options: Array<number | string>\r\n    onChangeCountCards: (count: string) => void\r\n}\r\n\r\nexport const MySelect = ({options, onChangeCountCards}: MySelectTypeProps) => {\r\n    const optionElement = options.map(option => {\r\n        return (\r\n            <option key={option.valueOf()} value={option}>{option}</option>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <select onChange={(e) => {\r\n            onChangeCountCards(e.currentTarget.value);\r\n        }}>\r\n            {optionElement}\r\n        </select>\r\n    );\r\n};","import { NavLink } from 'react-router-dom'\r\nimport s from './CustomNavlink.module.css'\r\n\r\ntype PropsType = {\r\n    to: string\r\n    body: string\r\n}\r\n\r\nexport const CustomNavlink: React.FC<PropsType> = ({\r\n    to, body\r\n}) => {\r\n    return (\r\n        <>\r\n            <NavLink \r\n                activeClassName={s.active}\r\n                to={to}\r\n                className={s.a} >\r\n            {body}\r\n            </NavLink>\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {deletePackCardById, updatePackCard} from \"../p2-BLL/packsList-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {CardType} from \"../p3-DAL/packsListApi\";\r\nimport {CustomNavlink} from \"../../../common/c4-Navlink/CustomNavlink\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\n\r\ntype TableBodyTypeProps = {\r\n    cardPacks: Array<CardType>\r\n}\r\n\r\nexport const TableBodyForCardPacks = ({cardPacks}: TableBodyTypeProps) => {\r\n    const [edit, setEdit] = useState<boolean>(false);\r\n    const [editId, setEditId] = useState<string>('');\r\n    const [changeNameCardPack, setChangeNameCardPack] = useState<string>('');\r\n    const [changeAuthorCardPack, setChangeAuthorCardPack] = useState<string>('');\r\n\r\n    const myId = useSelector<AppStoreType, string>(state => state.signIn.userId);\r\n    const isFetching = useSelector<AppStoreType, boolean>(state => state.packsList.isFetch);\r\n    const dispatch = useDispatch();\r\n\r\n    const JSX = cardPacks.map(table => {\r\n        //Delete CardPack\r\n        const clickHandlerDeleteCardPackById = () => {\r\n            dispatch(deletePackCardById(table._id));\r\n        };\r\n        //EditCardPackHandler\r\n        const clickHandlerEditPackById = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n            if (e.currentTarget.innerText === 'edit') {\r\n                myId === table.user_id && setEdit(true);\r\n                setEditId(table._id);\r\n                setChangeNameCardPack(table.name);\r\n                setChangeAuthorCardPack(table.user_name);\r\n            }\r\n            if (e.currentTarget.innerText === 'update') {\r\n                dispatch(updatePackCard({_id: table._id, name: changeNameCardPack, user_name: changeAuthorCardPack}));\r\n                myId === table.user_id && setEdit(false);\r\n            }\r\n        };\r\n\r\n        const onChangeHandlerChangeNameCardPack = (e: ChangeEvent<HTMLInputElement>) => {\r\n            setChangeNameCardPack(e.currentTarget.value);\r\n        };\r\n        const onChangeHandlerChangeAuthorCardPack = (e: ChangeEvent<HTMLInputElement>) => {\r\n            setChangeAuthorCardPack(e.currentTarget.value);\r\n        };\r\n\r\n        let jsDate = new Date(Date.parse(table.updated));\r\n\r\n        const lastUpdate = `${jsDate.getDate()}-${jsDate.getMonth() + 1}-${jsDate.getFullYear()}  ${jsDate.getHours()}:${jsDate.getMinutes()}`;\r\n        return (\r\n            <tr key={table._id}>\r\n                <th> {editId === table._id && edit ?\r\n                    <input onChange={onChangeHandlerChangeNameCardPack} value={changeNameCardPack}/> :\r\n                    <CustomNavlink to={`${Path.CARDS_LIST_PATH}/${table._id}`} body={table.name}/>}\r\n                </th>\r\n                <td>{table.cardsCount}</td>\r\n                <td>{lastUpdate}</td>\r\n                <td>\r\n                    {editId === table._id && edit ?\r\n                        <input onChange={onChangeHandlerChangeAuthorCardPack}\r\n                               value={changeAuthorCardPack}/> :\r\n                        table.user_name}\r\n                </td>\r\n                <td>\r\n                    {myId === table.user_id &&\r\n                    <Button disabled={isFetching} onClick={clickHandlerDeleteCardPackById} red>delete</Button>}\r\n\r\n                    {myId === table.user_id &&\r\n                    <Button disabled={isFetching}\r\n                            onClick={clickHandlerEditPackById}>{editId === table._id && edit ? 'update' : 'edit'}</Button>}\r\n\r\n                    <Button disabled={isFetching}>learn</Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {JSX}\r\n        </>\r\n    );\r\n};\r\n\r\n","class Test {\r\n    private name: string;\r\n    public constructor(nameCardsPack: string) {\r\n        this.name = nameCardsPack;\r\n    }\r\n}\r\n\r\nconst testData = [\r\n    new Test(\"courseHtml\"),\r\n    new Test(\"courseJs\"),\r\n    new Test(\"courseVue\"),\r\n    new Test(\"English cards\"),\r\n    new Test(\"Museum cards\"),\r\n    new Test(\"How City by Foto\"),\r\n    new Test(\"Now stop and begin\"),\r\n    new Test(\"Paris cards\"),\r\n    new Test(\"Учим математику\"),\r\n    new Test(\"Учим русский\"),\r\n    new Test(\"Учим историю\"),\r\n    new Test(\"Some cards\"),\r\n    new Test(\"И все такое\"),\r\n\r\n];\r\n\r\nfunction getRandomTest(int: number) {\r\n    return Math.floor(Math.random() * int);\r\n}\r\n\r\nexport const setTestData = () => {\r\n    const rnd = getRandomTest(testData.length);\r\n    const rndName = testData[rnd];\r\n    return rndName;\r\n};\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {Test} from '../../common/c9-Test/Test';\r\nimport {SignInContainer} from '../../features/f1-Sign-in/s1-UI/SignInContainer';\r\nimport {SignUpContainer} from '../../features/f2-Registration/r1-UI/SignUpContainer';\r\nimport {Profile} from '../../features/f5-Profile/p1-UI/Profile';\r\nimport commonStyle from '../../common/CommonStyle.module.css';\r\nimport {ForgotContainer} from '../../features/f3-Forgot/f1-UI/ForgotContainer';\r\nimport {AssistanceContainer} from '../../features/f4-Password-assistance/a1-UI/AssistanceContainer';\r\nimport {PacksList} from \"../../features/f6-PacksList/p1-UI/PacksList\";\r\nimport {CardsContainer} from \"../../features/f7-Cards/c1-UI/CardsContainer\";\r\n\r\n\r\n// paths\r\nexport enum Path {\r\n    SIGN_IN_PATH = '/sign-in',\r\n    SIGN_UP_PATH = '/sign-up',\r\n    FORGOT_PATH = '/forgot',\r\n    PASSWORD_ASSISTANCE_PATH = '/assistance/:token',\r\n    PROFILE_PATH = '/profile',\r\n    TEST_PATH = '/test',\r\n    LERGNOM_PACKS_LIST_PATH = '/packs-list',\r\n    CARDS_LIST_PATH = '/cards',\r\n}\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <div className={commonStyle.container}>\r\n            <Route exact path={'/'} render={() => <Redirect to={Path.SIGN_IN_PATH}/>}/>\r\n\r\n            <Route path={Path.SIGN_IN_PATH} render={() => <SignInContainer/>}/>\r\n            <Route path={Path.SIGN_UP_PATH} render={() => <SignUpContainer/>}/>\r\n            <Route path={Path.FORGOT_PATH} render={() => <ForgotContainer/>}/>\r\n            <Route path={Path.PASSWORD_ASSISTANCE_PATH} render={() => <AssistanceContainer/>}/>\r\n            <Route path={Path.PROFILE_PATH} render={() => <Profile/>}/>\r\n            <Route path={Path.TEST_PATH} render={() => <Test/>}/>\r\n            <Route path={Path.LERGNOM_PACKS_LIST_PATH} render={() => <PacksList/>}/>\r\n            <Route path={Path.CARDS_LIST_PATH} render={() => <CardsContainer/>}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n\r\n// types\r\nexport type PathsType = typeof Path","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './ToggleCheckBox.module.css';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    checked?: boolean\r\n}\r\n\r\nexport const ToggleCheckBox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, checked,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n        // && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    };\r\n\r\n    const finalInputClassName = `${s.superInput} ${className ? className : ''}`;\r\n    return (\r\n        <label className={s.checkbox}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={!checked ? s.checkboxSwitch : s.checkboxSwitchChecked}></span>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n};\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport s from './CustomRange.module.css';\r\n\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    width?: number,\r\n    getMin: (min: number) => void\r\n    getMax: (max: number) => void\r\n}\r\n\r\nconst CustomRange: React.FC<SuperDoubleRangePropsType> = ({getMin, getMax, width = 100}) => {\r\n\r\n    const [min, setMin] = useState(0);\r\n    const [max, setMax] = useState(width - 10);\r\n    const [minPoint, setMinPoint] = useState<number>(0);\r\n    const [edit, setEdit] = useState<boolean>(false);\r\n    const [editMin, setEditMin] = useState<boolean>(false);\r\n    const [maxVal, setMaxVal] = useState<number>(width);\r\n    const [minVal, setMinVal] = useState<number>(0);\r\n\r\n    const [minEnabled, setMinEnabled] = useState<boolean>(false);\r\n    const [maxEnabled, setMaxEnabled] = useState<boolean>(false);\r\n\r\n    useEffect(()=>{\r\n        getMin(minVal);\r\n        getMax(maxVal);\r\n    },[minVal,maxVal])\r\n\r\n\r\n    const mouseMoveHandler = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (e.currentTarget.id === 'min') {\r\n            if ((e.clientX - minPoint) < max && (e.clientX - minPoint > 0)) {\r\n                if (minEnabled) {\r\n                    setMin((e.clientX - 6) - minPoint);\r\n                    setMinVal((e.clientX) - minPoint);\r\n                }\r\n            }\r\n        }\r\n        if (e.currentTarget.id === 'max') {\r\n            if (((e.clientX - minPoint) > min + 5) && ((e.clientX - minPoint) < width)) {\r\n                if (maxEnabled) {\r\n                    setMax((e.clientX - 6) - minPoint);\r\n                    setMaxVal((e.clientX) - minPoint);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const doubleClickHandler = () => {\r\n        setEdit(true);\r\n    };\r\n\r\n    const mouseDownHandler = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        e.currentTarget.id === 'min' && setMinEnabled(true);\r\n        e.currentTarget.id === 'max' && setMaxEnabled(true);\r\n    };\r\n    const mouseUpHandler = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        e.currentTarget.id === 'min' && setMinEnabled(false);\r\n        e.currentTarget.id === 'max' && setMaxEnabled(false);\r\n    };\r\n\r\n    const setValueMin = () => {\r\n        setEditMin(false);\r\n        setMin(minVal);\r\n    };\r\n    const setValueMax = () => {\r\n        setEdit(false);\r\n        setMax(maxVal);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={s.slider} style={{width}} onMouseMove={(event) => {\r\n                setMinPoint(event.currentTarget.offsetLeft);\r\n            }}>\r\n                <div className={s.min} style={{width: min + 5}}>\r\n                    <div id={'min'} className={s.minDrag} style={{left: min}}\r\n                         onMouseMove={mouseMoveHandler}\r\n                         onMouseUp={mouseUpHandler}\r\n                         onMouseDown={mouseDownHandler}>\r\n                        <div onDoubleClick={() => {\r\n                            setEditMin(true);\r\n                        }} className={s.textMin}>  {editMin ?\r\n                            <input type={\"number\"} value={minVal} onChange={(e) => {\r\n\r\n                                if ((+e.currentTarget.value < max - 10) && (+e.currentTarget.value >= 0\r\n                                )) {\r\n                                    setMinVal(+e.currentTarget.value);\r\n                                }\r\n                            }} autoFocus onBlur={setValueMin} style={{width: '40px', border: 'none'}}\r\n                                   maxLength={2}/> : minVal} </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.max} style={{width: max + 10}}>\r\n                    <div id={'max'} style={{left: max}}\r\n                         onMouseMove={mouseMoveHandler} className={s.maxDrag}\r\n                         onMouseDown={mouseDownHandler} onMouseUp={mouseUpHandler}>\r\n\r\n\r\n                        <div onDoubleClick={doubleClickHandler} className={s.textMax}>{edit ?\r\n                            <input type={\"number\"} value={maxVal} onChange={(e) => {\r\n                                if ((+e.currentTarget.value < width) && (+e.currentTarget.value > min + 5\r\n                                )) {\r\n                                    setMaxVal(+e.currentTarget.value);\r\n                                }\r\n                            }} autoFocus onBlur={setValueMax} style={{width: '40px', border: 'none'}}\r\n                                   maxLength={2}/> : maxVal} </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomRange;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {HeaderOptionType, Table} from \"../../../common/c10-Table/Table\";\r\nimport {CardType} from \"../p3-DAL/packsListApi\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {addNewPackCard, getPacksCards, setPage, setPageCount} from \"../p2-BLL/packsList-reducer\";\r\nimport {Pagination} from \"./components/Pagination/Pagination\";\r\nimport s from './PacksList.module.css';\r\nimport {MySelect} from \"./components/Select/MySelect\";\r\nimport {InputText} from \"../../../common/c1-Input/InputText\";\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {TableBodyForCardPacks} from \"./TableBodyForCardPacks\";\r\nimport {setTestData} from \"../p4-Test/test\";\r\nimport {Preloader} from \"../../../common/c5-Loader/Preloader\";\r\nimport {ToggleCheckBox} from \"./components/CheckBoxToggle/ToggleCheckBox\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\nimport CustomRange from \"./components/CustomRange/CustomRange\";\r\n\r\nexport const PacksList = () => {\r\n    const cardPacks = useSelector<AppStoreType, Array<CardType>>(state => state.packsList.cardPacks);\r\n    const cardPacksTotalCount = useSelector<AppStoreType, number>(state => state.packsList.cardPacksTotalCount);\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.packsList.pageCount);\r\n    const page = useSelector<AppStoreType, number>(state => state.packsList.page);\r\n    const isFetching = useSelector<AppStoreType, boolean>(state => state.packsList.isFetch);\r\n    const dispatch = useDispatch();\r\n    const [searchPackName, setSearchPackName] = useState<string>('');\r\n    const [packName, setPackName] = useState<string>('');\r\n    const [myPacks, setMyPacks] = useState<boolean>(false);\r\n    const myId = useSelector<AppStoreType, string>(state => state.signIn.userId);\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.signIn.isAuth);\r\n\r\n    const [min, setMin] = useState<number>(0);\r\n    const [max, setMax] = useState<number>(0);\r\n\r\n    const [sortPack, setSortPack] = useState<string>(\"\");\r\n    const clickHandlerForSortUpdate = () => {\r\n        sortPack === \"update\" ? setSortPack('') :\r\n            setSortPack(\"update\");\r\n    };\r\n\r\n    // Data for table\r\n    const tableHeaders: Array<HeaderOptionType> = [\r\n        {headerTitle: 'Name',},\r\n        {headerTitle: \"Cards\"},\r\n        {\r\n            headerTitle: \"Last Updated\",\r\n            link: '⬇⬆',\r\n            onClick: clickHandlerForSortUpdate\r\n        },\r\n        {headerTitle: \"Created by\"},\r\n        {headerTitle: \"Actions\"}];\r\n\r\n    //TableBodyfor Example\r\n    const tableBody = <TableBodyForCardPacks cardPacks={cardPacks}/>;\r\n    //Count cardsPacks into one page\r\n    const optionsForSelector = [5, 10, 15];\r\n\r\n    useEffect(() => {\r\n        const myCardsPacks = myPacks ? myId : '';\r\n        dispatch(getPacksCards(page, pageCount, searchPackName, myCardsPacks, sortPack, min, max));\r\n    }, [page, pageCount, searchPackName, dispatch, myPacks, sortPack, myId, min, max]);\r\n\r\n    useEffect(() => {\r\n        const test = setTestData();\r\n        setPackName(test['name']);\r\n    }, []);\r\n\r\n\r\n    // 0Added new pack and new query Cards Pack\r\n    const clickHandlerAddNewPack = () => {\r\n        dispatch(addNewPackCard({name: packName}));\r\n        //Add Test data\r\n        const test = setTestData();\r\n        setPackName(test['name']);\r\n        // setPackName('');\r\n    };\r\n\r\n    //Change pageCount (selector options)\r\n    const clickHandlerPageCount = (count: string) => {\r\n        dispatch(setPageCount(+count));\r\n    };\r\n\r\n    const clickHandlerChangePage = (page: number) => {\r\n        dispatch(setPage(page));\r\n    };\r\n\r\n\r\n    const changeCheckedMyPacks = () => {\r\n        setMyPacks(!myPacks);\r\n    };\r\n\r\n    const getRangeMin = (min: number) => {\r\n        setMin(min);\r\n    };\r\n    const getRangeMax = (max: number) => {\r\n        setMax(max);\r\n    };\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={Path.SIGN_IN_PATH}/>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Packs list</h1>\r\n            <div className={s.packsListHeaderWrapper}>\r\n                {isFetching && <Preloader/>}\r\n                <div>\r\n                    <div>\r\n                        <span style={{marginRight: \"5px\"}}>My Packs</span>\r\n                        <ToggleCheckBox onChangeChecked={changeCheckedMyPacks} checked={myPacks}/>\r\n                    </div>\r\n                    <div style={{marginTop: \"5px\"}}>Number of cards <CustomRange getMin={getRangeMin}\r\n                                                                                 getMax={getRangeMax}/></div>\r\n                </div>\r\n                <div>\r\n                    <InputText value={searchPackName} onChangeText={setSearchPackName}\r\n                               label={\"Search by Pack Name  🔍\"}/>\r\n                    <InputText value={packName} onChangeText={setPackName} label={\"Add new Pack Name\"}/>\r\n                    <Button disabled={isFetching} onClick={clickHandlerAddNewPack}> + New Pack</Button>\r\n                </div>\r\n            </div>\r\n            <div className={s.packListTableWrapper}>\r\n                <Table tableHeaders={tableHeaders} tableBody={tableBody}/>\r\n            </div>\r\n\r\n            <div className={s.packsListFooterWrapper}>\r\n                <Pagination totalCount={cardPacksTotalCount} count={pageCount} page={page}\r\n                            onChangePage={clickHandlerChangePage}/>\r\n                <div className={s.packListPageSelector}>\r\n                    Show\r\n                    <MySelect options={optionsForSelector} onChangeCountCards={clickHandlerPageCount}/>\r\n                    Cards per Page\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n})\r\n\r\nexport const cardsApi = {\r\n    getCards(packListId: string, page?: number, pageCount?: number) {\r\n        return instance.get<ResponseType<Array<ICardType>>>(`/cards/card`, {\r\n            params: {\r\n                cardsPack_id: packListId,\r\n                page,\r\n                pageCount, // количество карточек за один запрос\r\n            }\r\n        })\r\n    },\r\n\r\n    addNewCard(payload: {cardsPack_id: string, question?: string, answer?: string}) {\r\n        return instance.post<ResponseType>(`/cards/card`, {card: payload});\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete(`/cards/card?id=${id}`);\r\n    },\r\n    updateCard(payload: { _id: string, question: string, answer: string }) {\r\n        return instance.put(`/cards/card`, {card: payload});\r\n    },\r\n\r\n}\r\n\r\nexport  type ResponseType<D = {}> = {\r\n    cards: Array<ICardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type ICardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\n","import { Dispatch } from 'redux'\r\nimport {cardsApi, ICardType} from \"../c3-DAL/cardsApi\";\r\nimport { ThunkAction } from 'redux-thunk'\r\n\r\nconst initialstate = {\r\n    cardsList: [] as Array<ICardType>,\r\n    cardsPack_id: '',\r\n    cardsTotalCount: 0,\r\n    page: 0,\r\n    pageCount: 0,\r\n    loading: false,\r\n    errorMessage: '',\r\n    searchQuestion: '',\r\n    searchAnswer: '',\r\n}\r\n\r\nexport const cardsReducer = (state: CardsStateType = initialstate, action: CardsActionType): CardsStateType => {\r\n    switch (action.type) {\r\n        case \"CARDS-LIST/SET_CARDS-LIST\": return {...state, cardsList: action.cardsList}\r\n        case \"CARDS-LIST/SET_LOADING\": return {...state, loading: action.loading}\r\n        case \"CARDS-LIST/SET_ERROR\": return {...state, errorMessage: action.errorMessage}\r\n        case \"CARDS-LIST/SET_CARDS_TOTAL_COUNT\": return {...state, cardsTotalCount: action.cardsTotalCount}\r\n        case \"CARDS-LIST/SET_PAGE\": return {...state, page: action.page}\r\n        case \"CARDS-LIST/SET_PAGE_COUNT\": return {...state, pageCount: action.pageCount}\r\n        case \"CARDS-LIST/SET_CARD-PACK-ID\": return {...state, cardsPack_id: action.cardsPack_id}\r\n        case \"CARDS-LIST/SET_SEARCH_QUESTION\": return {...state, searchQuestion: action.value}\r\n        case \"CARDS-LIST/SET_SEARCH_ANSWER\": return {...state, searchAnswer: action.value}\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setCards = (cardsList: Array<ICardType>) => ({type: \"CARDS-LIST/SET_CARDS-LIST\", cardsList} as const)\r\nconst setLoading = (loading: boolean) => ({type: \"CARDS-LIST/SET_LOADING\", loading} as const)\r\nconst setError = (errorMessage: string) => ({type: \"CARDS-LIST/SET_ERROR\", errorMessage} as const)\r\nconst setCardsTotalCount = (cardsTotalCount: number) => ({type: \"CARDS-LIST/SET_CARDS_TOTAL_COUNT\", cardsTotalCount} as const)\r\nexport const setPage = (page: number) => ({type: \"CARDS-LIST/SET_PAGE\", page} as const)\r\nconst setPageCount = (pageCount: number) => ({type: \"CARDS-LIST/SET_PAGE_COUNT\", pageCount} as const)\r\nconst setCardPackId = (cardsPack_id: string) => ({type: \"CARDS-LIST/SET_CARD-PACK-ID\", cardsPack_id} as const)\r\nexport const setSearchQuestion = (value: string) => ({type: \"CARDS-LIST/SET_SEARCH_QUESTION\", value} as const)\r\nexport const setSearchAnswer = (value: string) => ({type: \"CARDS-LIST/SET_SEARCH_ANSWER\", value} as const)\r\n\r\n// thunks\r\nexport const getCardsTC = (cardsListId: string, page?: number, pageCount?: number) => (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true))\r\n    cardsApi.getCards(cardsListId, page, pageCount)\r\n        .then(res => {\r\n            dispatch(setCardsTotalCount(res.data.cardsTotalCount))\r\n            dispatch(setPage(res.data.page))\r\n            dispatch(setPageCount(res.data.pageCount))\r\n            dispatch(setCards(res.data.cards))\r\n            dispatch(setCardPackId(cardsListId))\r\n        })\r\n        .catch(e => {\r\n            const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n            dispatch(setError(errorMessage))\r\n        })\r\n        .finally( () => dispatch(setLoading(false)) )\r\n}\r\nexport const addCardTC = ():ThunkTypes =>\r\n    (dispatch, getState: any) => {\r\n    const state = getState().cards\r\n    const cardsPack_id = state.cardsPack_id\r\n    const pageCount = state.pageCount\r\n    const payload = {\r\n        cardsPack_id,\r\n        question: \"Yo, or not Yo Bro?\",\r\n        answer: \"of course Yo\",\r\n    }\r\n    dispatch(setLoading(true))\r\n    cardsApi.addNewCard(payload)\r\n        .then(res => dispatch(getCardsTC(cardsPack_id, 1, pageCount)))\r\n        .catch(e => {\r\n            const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n            dispatch(setError(errorMessage))\r\n        })\r\n}\r\nexport const deleteCardTC = (id: string):ThunkTypes =>\r\n    (dispatch, getState: any) => {\r\n    const state = getState().cards\r\n    const cardsPack_id = state.cardsPack_id\r\n    const pageCount = state.pageCount\r\n    dispatch(setLoading(true))\r\n    cardsApi.deleteCard(id)\r\n        .then(res => dispatch(getCardsTC(cardsPack_id, 1, pageCount)))\r\n        .catch(e => {\r\n            const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n            dispatch(setError(errorMessage))\r\n        })\r\n}\r\nexport const updateCardTC  = (_id: string, question: string, answer: string):ThunkTypes =>\r\n    (dispatch, getState: any) => {\r\n    const state = getState().cards\r\n    const cardsPack_id = state.cardsPack_id\r\n    const pageCount = state.pageCount\r\n    const payload = {\r\n        _id,\r\n        question,\r\n        answer,\r\n    }\r\n    dispatch(setLoading(true))\r\n    cardsApi.updateCard(payload)\r\n        .then(res => dispatch(getCardsTC(cardsPack_id, 1, pageCount)))\r\n        .catch(e => {\r\n            const errorMessage = e.response?.data?.error || \"Unknown error!\"\r\n            dispatch(setError(errorMessage))\r\n        })\r\n}\r\n\r\n// types\r\nexport type CardsStateType = typeof initialstate\r\n\r\nexport type CardsActionType = ReturnType<typeof setCards>\r\n    | ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setCardsTotalCount>\r\n    | ReturnType<typeof setPage>\r\n    | ReturnType<typeof setPageCount>\r\n    | ReturnType<typeof setCardPackId>\r\n    | ReturnType<typeof setSearchQuestion>\r\n    | ReturnType<typeof setSearchAnswer>\r\n\r\nexport type ThunkTypes<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    CardsStateType,\r\n    unknown,\r\n    CardsActionType\r\n    >","import {ICardType} from \"../../c3-DAL/cardsApi\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport Button from \"../../../../common/c2-Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../main/m2-BLL/store\";\r\nimport {deleteCardTC, updateCardTC} from \"../../c2-BLL/cards-reducer\";\r\nimport s from './CardsTableBody.module.css'\r\n\r\ntype CardsTableBody = {\r\n    cardsList: Array<ICardType>\r\n}\r\nexport const TableBody: React.FC<CardsTableBody> = ({cardsList}) => {\r\n    const [edit, setEdit] = useState<boolean>(false)\r\n    const [editId, setEditId] = useState<string>('')\r\n    const [question, setQuestion] = useState<string>('')\r\n    const [answer, setAnswer] = useState<string>('')\r\n\r\n    const dispatch = useDispatch()\r\n    const myId = useSelector<AppStoreType, string>(state => state.signIn.userId)\r\n    const searchQuestion = useSelector<AppStoreType, string>(state => state.cards.searchQuestion)\r\n    const searchAnswer = useSelector<AppStoreType, string>(state => state.cards.searchAnswer)\r\n    const cardListView = cardsList\r\n        .filter(card => card.question.indexOf(searchQuestion) > -1)\r\n        .filter(card => card.answer.indexOf(searchAnswer) > -1)\r\n\r\n    return (\r\n        <>\r\n            {cardListView.map(card => {\r\n                const deleteCardHandler = () => dispatch(deleteCardTC(card._id))\r\n                const updateCardHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n                    if (e.currentTarget.innerText === 'edit') {\r\n                        myId === card.user_id && setEdit(true);\r\n                        setEditId(card._id);\r\n                        setQuestion(card.question);\r\n                        setAnswer(card.answer);\r\n                    }\r\n                    if (e.currentTarget.innerText === 'update') {\r\n                        dispatch(updateCardTC(editId, question, answer));\r\n                        myId === card.user_id && setEdit(false);\r\n                    }\r\n                }\r\n\r\n                const onChangeQuestion = (e: ChangeEvent<HTMLInputElement>) => setQuestion(e.currentTarget.value)\r\n                const onChangeAnswer = (e: ChangeEvent<HTMLInputElement>) => setAnswer(e.currentTarget.value)\r\n\r\n                return (\r\n                    <tr key={card._id}>\r\n                        <td>\r\n                            { editId === card._id && edit\r\n                                ? <input onChange={onChangeQuestion} value={question}/>\r\n                                : card.question }\r\n                        </td>\r\n                        <td>\r\n                            { editId === card._id && edit\r\n                                    ? <input onChange={onChangeAnswer} value={answer}/>\r\n                                : card.answer }\r\n                        </td>\r\n                        <td>{card.updated}</td>\r\n                        <td>{card.grade}</td>\r\n                        <td>\r\n                            { myId === card.user_id && <Button\r\n                                    className={s.btnCRUD}\r\n                                    onClick={deleteCardHandler}\r\n                                    red> delete\r\n                                </Button> }\r\n\r\n                            { myId === card.user_id && <Button\r\n                                        className={s.btnCRUD}\r\n                                        onClick={updateCardHandler} >\r\n                                    {editId === card._id && edit ? 'update' : 'edit'}\r\n                                </Button> }\r\n\r\n                            <Button\r\n                                className={s.btnCRUD} >learn </Button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}","import s from './Search.module.css'\r\nimport {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setSearchAnswer, setSearchQuestion} from \"../../c2-BLL/cards-reducer\";\r\nimport Button from \"../../../../common/c2-Button/Button\";\r\n\r\nexport const Search = () => {\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeQuestion = (e: ChangeEvent<HTMLInputElement>) => setQuestion(e.currentTarget.value)\r\n    const onChangeAnswer = (e: ChangeEvent<HTMLInputElement>) => setAnswer(e.currentTarget.value)\r\n    const searchBtnHandler = () => {\r\n        dispatch(setSearchQuestion(question))\r\n        dispatch(setSearchAnswer(answer))\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <input\r\n                placeholder={\"Search by question...\"}\r\n                value={question}\r\n                onChange={onChangeQuestion}\r\n            />\r\n            <input\r\n                placeholder={\"Search by answer...\"}\r\n                value={answer}\r\n                onChange={onChangeAnswer}\r\n            />\r\n            <Button className={s.btnSearch} onClick={searchBtnHandler}>Search</Button>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCardTC, getCardsTC, setPage} from \"../c2-BLL/cards-reducer\";\r\nimport {AppStoreType} from \"../../../main/m2-BLL/store\";\r\nimport {HeaderOptionType, Table} from \"../../../common/c10-Table/Table\";\r\nimport {Redirect, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport {TableBody} from \"./Component/CardsTableBody\";\r\nimport s from \"./Cards.module.css\";\r\nimport {Pagination} from \"../../f6-PacksList/p1-UI/components/Pagination/Pagination\";\r\nimport {ICardType} from \"../c3-DAL/cardsApi\";\r\nimport {Path} from \"../../../main/m1-UI/Routes\";\r\nimport {Search} from \"./Component/Search\";\r\nimport Button from \"../../../common/c2-Button/Button\";\r\nimport {Preloader} from \"../../../common/c5-Loader/Preloader\";\r\n\r\nexport const CardsContainer = () => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const cardsList = useSelector<AppStoreType, Array<ICardType>>(state => state.cards.cardsList);\r\n    const cardsTotalCount = useSelector<AppStoreType, number>(state => state.cards.cardsTotalCount);\r\n    const page = useSelector<AppStoreType, number>(state => state.cards.page);\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.cards.pageCount);\r\n    const isAuth = useSelector<AppStoreType, boolean>(state => state.signIn.isAuth);\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.cards.loading);\r\n\r\n    const urlParams = useRouteMatch<{ cardPackId: string }>(\"/cards/:cardPackId\");\r\n    // if (urlParams?.isExact) {\r\n    //     console.log('cardPackId', urlParams.params.cardPackId);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        urlParams && dispatch(getCardsTC(urlParams.params.cardPackId, page, pageCount))\r\n    }, [urlParams?.params.cardPackId, page, pageCount, dispatch])\r\n\r\n    const changePageHandler = (page: number) => dispatch(setPage(page))\r\n    const addCardHandler = () => dispatch(addCardTC())\r\n    const historyBack = () => history.goBack()\r\n\r\n    const tableHeaders: Array<HeaderOptionType> = [{headerTitle: \"Question\"}, {headerTitle: \"Answer\"}, {headerTitle: \"Update\"}, {headerTitle: \"Grade\"}];\r\n    const tableBody = <TableBody cardsList={cardsList}/>;\r\n\r\n    if(!isAuth) return <Redirect to={Path.SIGN_IN_PATH}/>\r\n    return (\r\n        <>\r\n            <div className={s.backWrapper}>\r\n                <div className={s.back} onClick={historyBack}>\r\n                    <svg width=\"16\" height=\"11\" viewBox=\"0 0 16 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M16 5.5H2M2 5.5L6.66667 1M2 5.5L6.66667 10\" stroke=\"#2D2E46\" strokeWidth=\"2\"/>\r\n                    </svg>\r\n                    <span>Back to Pack List</span>\r\n                </div>\r\n                <Button onClick={addCardHandler} className={s.addCard}>add new card</Button>\r\n            </div>\r\n            <Search/>\r\n            {loading && <Preloader/>}\r\n            <Table tableHeaders={tableHeaders} tableBody={tableBody}/>\r\n            <div className={s.footerWrapper}>\r\n                <Pagination\r\n                    totalCount={cardsTotalCount}\r\n                    count={pageCount}\r\n                    page={page}\r\n                    onChangePage={changePageHandler}/>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport {Path} from './Routes';\r\nimport s from './Header.module.css';\r\nimport {CustomNavlink} from '../../common/c4-Navlink/CustomNavlink';\r\n\r\n\r\nconst Header: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <CustomNavlink to={Path.SIGN_IN_PATH} body={\"sign-in\"}/>\r\n            <CustomNavlink to={Path.SIGN_UP_PATH} body={\"sign-up\"}/>\r\n            <CustomNavlink to={Path.FORGOT_PATH} body={\"forgot\"}/>\r\n            <CustomNavlink to={Path.PASSWORD_ASSISTANCE_PATH} body={\"assistance\"}/>\r\n            <CustomNavlink to={Path.PROFILE_PATH} body={\"profile\"}/>\r\n            <CustomNavlink to={Path.LERGNOM_PACKS_LIST_PATH} body={\"packs-list\"}/>\r\n            <CustomNavlink to={Path.CARDS_LIST_PATH} body={\"cards\"}/>\r\n            <CustomNavlink to={Path.TEST_PATH} body={\"test\"}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {signInReducer} from '../../features/f1-Sign-in/s2-BLL/Sign-in-reducer';\r\nimport {signUpReducer} from '../../features/f2-Registration/r2-BLL/Sign-up-reducer';\r\nimport {forgotReducer} from '../../features/f3-Forgot/f2-BLL/Forgot-reducer';\r\nimport {assistanceReducer} from '../../features/f4-Password-assistance/a2-BLL/assistance-reducer';\r\nimport {profileReducer} from '../../features/f5-Profile/p2-BLL/Profile-reducer';\r\nimport {packsListReducer} from \"../../features/f6-PacksList/p2-BLL/packsList-reducer\";\r\nimport {cardsReducer} from \"../../features/f7-Cards/c2-BLL/cards-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    register: signUpReducer,\r\n    forgot: forgotReducer,\r\n    assistance: assistanceReducer,\r\n    profile: profileReducer,\r\n    packsList: packsListReducer,\r\n    cards: cardsReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from 'react'\nimport './App.css'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport Main from './main/m1-UI/Main'\nimport store from './main/m2-BLL/store'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <HashRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n          </HashRouter>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}